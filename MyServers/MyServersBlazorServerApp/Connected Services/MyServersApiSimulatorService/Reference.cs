//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyServersApiSimulatorService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthInfo", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct AuthInfo
    {
        
        private string PasswordField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct Message
    {
        
        private string BodyField;
        
        private System.DateTime DateSentField;
        
        private int MessageIDField;
        
        private string SubjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body
        {
            get
            {
                return this.BodyField;
            }
            set
            {
                this.BodyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateSent
        {
            get
            {
                return this.DateSentField;
            }
            set
            {
                this.DateSentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageID
        {
            get
            {
                return this.MessageIDField;
            }
            set
            {
                this.MessageIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject
        {
            get
            {
                return this.SubjectField;
            }
            set
            {
                this.SubjectField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerCredentialType", Namespace="http://schemas.datacontract.org/2004/07/RapidSwitch.MyServersApi")]
    public enum ServerCredentialType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SSH = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RDP = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HTTP = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HTTPS = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Database = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerCredential", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct ServerCredential
    {
        
        private int DurationField;
        
        private string LocationField;
        
        private string PasswordField;
        
        private System.Nullable<int> PortField;
        
        private string ServiceIDField;
        
        private string SuPasswordField;
        
        private MyServersApiSimulatorService.ServerCredentialType TypeField;
        
        private bool UseSudoField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration
        {
            get
            {
                return this.DurationField;
            }
            set
            {
                this.DurationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Port
        {
            get
            {
                return this.PortField;
            }
            set
            {
                this.PortField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceID
        {
            get
            {
                return this.ServiceIDField;
            }
            set
            {
                this.ServiceIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuPassword
        {
            get
            {
                return this.SuPasswordField;
            }
            set
            {
                this.SuPasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.ServerCredentialType Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseSudo
        {
            get
            {
                return this.UseSudoField;
            }
            set
            {
                this.UseSudoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductType", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class ProductType : object
    {
        
        private string CodeField;
        
        private string DescnField;
        
        private MyServersApiSimulatorService.ProductFeature[] FeaturesField;
        
        private decimal MinMonthlyCostField;
        
        private decimal MinSetupCostField;
        
        private string MoreInfoURLField;
        
        private int NoOfProductsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                this.CodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descn
        {
            get
            {
                return this.DescnField;
            }
            set
            {
                this.DescnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.ProductFeature[] Features
        {
            get
            {
                return this.FeaturesField;
            }
            set
            {
                this.FeaturesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinMonthlyCost
        {
            get
            {
                return this.MinMonthlyCostField;
            }
            set
            {
                this.MinMonthlyCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinSetupCost
        {
            get
            {
                return this.MinSetupCostField;
            }
            set
            {
                this.MinSetupCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoreInfoURL
        {
            get
            {
                return this.MoreInfoURLField;
            }
            set
            {
                this.MoreInfoURLField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfProducts
        {
            get
            {
                return this.NoOfProductsField;
            }
            set
            {
                this.NoOfProductsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductFeature", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class ProductFeature : object
    {
        
        private string DescnField;
        
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descn
        {
            get
            {
                return this.DescnField;
            }
            set
            {
                this.DescnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class Product : object
    {
        
        private string CodeField;
        
        private MyServersApiSimulatorService.Cost CostField;
        
        private string DescnField;
        
        private string DiscountInfoField;
        
        private bool IsRecommendedField;
        
        private int MinimumTermField;
        
        private MyServersApiSimulatorService.ProductFeature[] ProductFeaturesField;
        
        private System.Guid ProductGuidField;
        
        private MyServersApiSimulatorService.ProductInfoField[] ProductInfoFieldsField;
        
        private MyServersApiSimulatorService.ProductSpec[] ProductSpecsField;
        
        private string TitleField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                this.CodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.Cost Cost
        {
            get
            {
                return this.CostField;
            }
            set
            {
                this.CostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descn
        {
            get
            {
                return this.DescnField;
            }
            set
            {
                this.DescnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiscountInfo
        {
            get
            {
                return this.DiscountInfoField;
            }
            set
            {
                this.DiscountInfoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRecommended
        {
            get
            {
                return this.IsRecommendedField;
            }
            set
            {
                this.IsRecommendedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinimumTerm
        {
            get
            {
                return this.MinimumTermField;
            }
            set
            {
                this.MinimumTermField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.ProductFeature[] ProductFeatures
        {
            get
            {
                return this.ProductFeaturesField;
            }
            set
            {
                this.ProductFeaturesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProductGuid
        {
            get
            {
                return this.ProductGuidField;
            }
            set
            {
                this.ProductGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.ProductInfoField[] ProductInfoFields
        {
            get
            {
                return this.ProductInfoFieldsField;
            }
            set
            {
                this.ProductInfoFieldsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.ProductSpec[] ProductSpecs
        {
            get
            {
                return this.ProductSpecsField;
            }
            set
            {
                this.ProductSpecsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cost", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class Cost : object
    {
        
        private decimal AnnualCostField;
        
        private decimal AnnualDiscountField;
        
        private string AnnualTextField;
        
        private string AnnualTextIncVATField;
        
        private decimal AnnualTotalCostField;
        
        private decimal AnnualVATCostField;
        
        private decimal BaseMonthlyCostField;
        
        private decimal BaseMonthlyTotalCostField;
        
        private decimal BaseMonthlyVATCostField;
        
        private decimal BaseSetupCostField;
        
        private decimal BaseSetupTotalCostField;
        
        private decimal BaseSetupVATCostField;
        
        private decimal DiscountField;
        
        private decimal MonthlyCostField;
        
        private decimal MonthlyDiscountField;
        
        private string MonthlyTextField;
        
        private string MonthlyTextIncVATField;
        
        private decimal MonthlyTotalCostField;
        
        private decimal MonthlyVATCostField;
        
        private decimal QuarterlyCostField;
        
        private decimal QuarterlyDiscountField;
        
        private string QuarterlyTextField;
        
        private string QuarterlyTextIncVATField;
        
        private decimal QuarterlyTotalCostField;
        
        private decimal QuarterlyVATCostField;
        
        private decimal SetupCostField;
        
        private decimal SetupDiscountField;
        
        private decimal SetupTotalCostField;
        
        private decimal SetupVATCostField;
        
        private string TextField;
        
        private decimal VATRateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AnnualCost
        {
            get
            {
                return this.AnnualCostField;
            }
            set
            {
                this.AnnualCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AnnualDiscount
        {
            get
            {
                return this.AnnualDiscountField;
            }
            set
            {
                this.AnnualDiscountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnnualText
        {
            get
            {
                return this.AnnualTextField;
            }
            set
            {
                this.AnnualTextField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnnualTextIncVAT
        {
            get
            {
                return this.AnnualTextIncVATField;
            }
            set
            {
                this.AnnualTextIncVATField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AnnualTotalCost
        {
            get
            {
                return this.AnnualTotalCostField;
            }
            set
            {
                this.AnnualTotalCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AnnualVATCost
        {
            get
            {
                return this.AnnualVATCostField;
            }
            set
            {
                this.AnnualVATCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BaseMonthlyCost
        {
            get
            {
                return this.BaseMonthlyCostField;
            }
            set
            {
                this.BaseMonthlyCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BaseMonthlyTotalCost
        {
            get
            {
                return this.BaseMonthlyTotalCostField;
            }
            set
            {
                this.BaseMonthlyTotalCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BaseMonthlyVATCost
        {
            get
            {
                return this.BaseMonthlyVATCostField;
            }
            set
            {
                this.BaseMonthlyVATCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BaseSetupCost
        {
            get
            {
                return this.BaseSetupCostField;
            }
            set
            {
                this.BaseSetupCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BaseSetupTotalCost
        {
            get
            {
                return this.BaseSetupTotalCostField;
            }
            set
            {
                this.BaseSetupTotalCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BaseSetupVATCost
        {
            get
            {
                return this.BaseSetupVATCostField;
            }
            set
            {
                this.BaseSetupVATCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount
        {
            get
            {
                return this.DiscountField;
            }
            set
            {
                this.DiscountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MonthlyCost
        {
            get
            {
                return this.MonthlyCostField;
            }
            set
            {
                this.MonthlyCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MonthlyDiscount
        {
            get
            {
                return this.MonthlyDiscountField;
            }
            set
            {
                this.MonthlyDiscountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MonthlyText
        {
            get
            {
                return this.MonthlyTextField;
            }
            set
            {
                this.MonthlyTextField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MonthlyTextIncVAT
        {
            get
            {
                return this.MonthlyTextIncVATField;
            }
            set
            {
                this.MonthlyTextIncVATField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MonthlyTotalCost
        {
            get
            {
                return this.MonthlyTotalCostField;
            }
            set
            {
                this.MonthlyTotalCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MonthlyVATCost
        {
            get
            {
                return this.MonthlyVATCostField;
            }
            set
            {
                this.MonthlyVATCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QuarterlyCost
        {
            get
            {
                return this.QuarterlyCostField;
            }
            set
            {
                this.QuarterlyCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QuarterlyDiscount
        {
            get
            {
                return this.QuarterlyDiscountField;
            }
            set
            {
                this.QuarterlyDiscountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuarterlyText
        {
            get
            {
                return this.QuarterlyTextField;
            }
            set
            {
                this.QuarterlyTextField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuarterlyTextIncVAT
        {
            get
            {
                return this.QuarterlyTextIncVATField;
            }
            set
            {
                this.QuarterlyTextIncVATField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QuarterlyTotalCost
        {
            get
            {
                return this.QuarterlyTotalCostField;
            }
            set
            {
                this.QuarterlyTotalCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QuarterlyVATCost
        {
            get
            {
                return this.QuarterlyVATCostField;
            }
            set
            {
                this.QuarterlyVATCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SetupCost
        {
            get
            {
                return this.SetupCostField;
            }
            set
            {
                this.SetupCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SetupDiscount
        {
            get
            {
                return this.SetupDiscountField;
            }
            set
            {
                this.SetupDiscountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SetupTotalCost
        {
            get
            {
                return this.SetupTotalCostField;
            }
            set
            {
                this.SetupTotalCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SetupVATCost
        {
            get
            {
                return this.SetupVATCostField;
            }
            set
            {
                this.SetupVATCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VATRate
        {
            get
            {
                return this.VATRateField;
            }
            set
            {
                this.VATRateField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductInfoField", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class ProductInfoField : object
    {
        
        private string DescnField;
        
        private string TitleField;
        
        private string TypeField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descn
        {
            get
            {
                return this.DescnField;
            }
            set
            {
                this.DescnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductSpec", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class ProductSpec : object
    {
        
        private string DescnField;
        
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descn
        {
            get
            {
                return this.DescnField;
            }
            set
            {
                this.DescnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductRule", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class ProductRule : object
    {
        
        private string Category1Field;
        
        private System.Guid Category1GuidField;
        
        private string Category2Field;
        
        private System.Guid Category2GuidField;
        
        private string ErrorMessageField;
        
        private bool MustMatchField;
        
        private string ProductTypeIdField;
        
        private string Rule1Field;
        
        private string Rule2Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category1
        {
            get
            {
                return this.Category1Field;
            }
            set
            {
                this.Category1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Category1Guid
        {
            get
            {
                return this.Category1GuidField;
            }
            set
            {
                this.Category1GuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category2
        {
            get
            {
                return this.Category2Field;
            }
            set
            {
                this.Category2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Category2Guid
        {
            get
            {
                return this.Category2GuidField;
            }
            set
            {
                this.Category2GuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage
        {
            get
            {
                return this.ErrorMessageField;
            }
            set
            {
                this.ErrorMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MustMatch
        {
            get
            {
                return this.MustMatchField;
            }
            set
            {
                this.MustMatchField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductTypeId
        {
            get
            {
                return this.ProductTypeIdField;
            }
            set
            {
                this.ProductTypeIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rule1
        {
            get
            {
                return this.Rule1Field;
            }
            set
            {
                this.Rule1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rule2
        {
            get
            {
                return this.Rule2Field;
            }
            set
            {
                this.Rule2Field = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductOptionGroup", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class ProductOptionGroup : object
    {
        
        private MyServersApiSimulatorService.ProductOptionCategory[] CategoriesField;
        
        private string GroupNameField;
        
        private string HelpTextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.ProductOptionCategory[] Categories
        {
            get
            {
                return this.CategoriesField;
            }
            set
            {
                this.CategoriesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName
        {
            get
            {
                return this.GroupNameField;
            }
            set
            {
                this.GroupNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HelpText
        {
            get
            {
                return this.HelpTextField;
            }
            set
            {
                this.HelpTextField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductOptionCategory", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct ProductOptionCategory
    {
        
        private System.Guid CategoryGuidField;
        
        private string CategoryNameField;
        
        private int DefaultOptionField;
        
        private string GroupNameField;
        
        private string HelpTextField;
        
        private MyServersApiSimulatorService.ProductOption[] OptionsField;
        
        private bool TextBasedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CategoryGuid
        {
            get
            {
                return this.CategoryGuidField;
            }
            set
            {
                this.CategoryGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName
        {
            get
            {
                return this.CategoryNameField;
            }
            set
            {
                this.CategoryNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefaultOption
        {
            get
            {
                return this.DefaultOptionField;
            }
            set
            {
                this.DefaultOptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName
        {
            get
            {
                return this.GroupNameField;
            }
            set
            {
                this.GroupNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HelpText
        {
            get
            {
                return this.HelpTextField;
            }
            set
            {
                this.HelpTextField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.ProductOption[] Options
        {
            get
            {
                return this.OptionsField;
            }
            set
            {
                this.OptionsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TextBased
        {
            get
            {
                return this.TextBasedField;
            }
            set
            {
                this.TextBasedField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductOption", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class ProductOption : object
    {
        
        private string CategoryField;
        
        private System.Guid CategoryGuidField;
        
        private string DescriptionField;
        
        private decimal MonthlyCostField;
        
        private System.Guid OptionGuidField;
        
        private int OptionIdField;
        
        private bool SelectedField;
        
        private decimal SetupCostField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category
        {
            get
            {
                return this.CategoryField;
            }
            set
            {
                this.CategoryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CategoryGuid
        {
            get
            {
                return this.CategoryGuidField;
            }
            set
            {
                this.CategoryGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MonthlyCost
        {
            get
            {
                return this.MonthlyCostField;
            }
            set
            {
                this.MonthlyCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OptionGuid
        {
            get
            {
                return this.OptionGuidField;
            }
            set
            {
                this.OptionGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OptionId
        {
            get
            {
                return this.OptionIdField;
            }
            set
            {
                this.OptionIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected
        {
            get
            {
                return this.SelectedField;
            }
            set
            {
                this.SelectedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SetupCost
        {
            get
            {
                return this.SetupCostField;
            }
            set
            {
                this.SetupCostField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChassisForSale", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class ChassisForSale : object
    {
        
        private string CPUField;
        
        private int CPUCoresField;
        
        private string CPUFamilyField;
        
        private string ChassisField;
        
        private System.Guid ChassisGuidField;
        
        private string ExtrasField;
        
        private string GPUField;
        
        private int GPUCoresField;
        
        private string HDDField;
        
        private bool HasOOBField;
        
        private string LocationField;
        
        private decimal MonthlyCostField;
        
        private int NoOfConnectedNicsField;
        
        private int NoOfNicsField;
        
        private string RAIDField;
        
        private string RAMField;
        
        private decimal SetupCostField;
        
        private MyServersApiSimulatorService.ChassisForSaleType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPU
        {
            get
            {
                return this.CPUField;
            }
            set
            {
                this.CPUField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CPUCores
        {
            get
            {
                return this.CPUCoresField;
            }
            set
            {
                this.CPUCoresField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPUFamily
        {
            get
            {
                return this.CPUFamilyField;
            }
            set
            {
                this.CPUFamilyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Chassis
        {
            get
            {
                return this.ChassisField;
            }
            set
            {
                this.ChassisField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ChassisGuid
        {
            get
            {
                return this.ChassisGuidField;
            }
            set
            {
                this.ChassisGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extras
        {
            get
            {
                return this.ExtrasField;
            }
            set
            {
                this.ExtrasField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPU
        {
            get
            {
                return this.GPUField;
            }
            set
            {
                this.GPUField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GPUCores
        {
            get
            {
                return this.GPUCoresField;
            }
            set
            {
                this.GPUCoresField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HDD
        {
            get
            {
                return this.HDDField;
            }
            set
            {
                this.HDDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasOOB
        {
            get
            {
                return this.HasOOBField;
            }
            set
            {
                this.HasOOBField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MonthlyCost
        {
            get
            {
                return this.MonthlyCostField;
            }
            set
            {
                this.MonthlyCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfConnectedNics
        {
            get
            {
                return this.NoOfConnectedNicsField;
            }
            set
            {
                this.NoOfConnectedNicsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfNics
        {
            get
            {
                return this.NoOfNicsField;
            }
            set
            {
                this.NoOfNicsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RAID
        {
            get
            {
                return this.RAIDField;
            }
            set
            {
                this.RAIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RAM
        {
            get
            {
                return this.RAMField;
            }
            set
            {
                this.RAMField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SetupCost
        {
            get
            {
                return this.SetupCostField;
            }
            set
            {
                this.SetupCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.ChassisForSaleType Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChassisForSaleType", Namespace="http://schemas.datacontract.org/2004/07/RapidSwitch.MyServersApi")]
    public enum ChassisForSaleType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CPU = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GPU = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChassisGroup", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class ChassisGroup : object
    {
        
        private string CPUField;
        
        private string ChassisField;
        
        private System.Guid ChassisGroupGuidField;
        
        private string DeliveryTimeField;
        
        private string ExtrasField;
        
        private string GPUField;
        
        private string HDDField;
        
        private string LocationField;
        
        private decimal MonthlyCostField;
        
        private string NameField;
        
        private int NoOfChassisField;
        
        private string RAIDField;
        
        private string RAMField;
        
        private decimal SetupCostField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CPU
        {
            get
            {
                return this.CPUField;
            }
            set
            {
                this.CPUField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Chassis
        {
            get
            {
                return this.ChassisField;
            }
            set
            {
                this.ChassisField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ChassisGroupGuid
        {
            get
            {
                return this.ChassisGroupGuidField;
            }
            set
            {
                this.ChassisGroupGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryTime
        {
            get
            {
                return this.DeliveryTimeField;
            }
            set
            {
                this.DeliveryTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extras
        {
            get
            {
                return this.ExtrasField;
            }
            set
            {
                this.ExtrasField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPU
        {
            get
            {
                return this.GPUField;
            }
            set
            {
                this.GPUField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HDD
        {
            get
            {
                return this.HDDField;
            }
            set
            {
                this.HDDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MonthlyCost
        {
            get
            {
                return this.MonthlyCostField;
            }
            set
            {
                this.MonthlyCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfChassis
        {
            get
            {
                return this.NoOfChassisField;
            }
            set
            {
                this.NoOfChassisField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RAID
        {
            get
            {
                return this.RAIDField;
            }
            set
            {
                this.RAIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RAM
        {
            get
            {
                return this.RAMField;
            }
            set
            {
                this.RAMField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SetupCost
        {
            get
            {
                return this.SetupCostField;
            }
            set
            {
                this.SetupCostField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Basket", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class Basket : object
    {
        
        private System.Guid BasketGuidField;
        
        private MyServersApiSimulatorService.BillingPeriod BillingPeriodField;
        
        private MyServersApiSimulatorService.Cost CostField;
        
        private System.DateTime DateCreatedField;
        
        private System.DateTime DateExpiresField;
        
        private string EmailField;
        
        private string IPCountryField;
        
        private MyServersApiSimulatorService.BasketItem[] ItemsField;
        
        private System.DateTime LastModifiedField;
        
        private bool LockedField;
        
        private string RefererField;
        
        private string RemoteIPField;
        
        private int SessionIdField;
        
        private string UserAgentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BasketGuid
        {
            get
            {
                return this.BasketGuidField;
            }
            set
            {
                this.BasketGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.BillingPeriod BillingPeriod
        {
            get
            {
                return this.BillingPeriodField;
            }
            set
            {
                this.BillingPeriodField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.Cost Cost
        {
            get
            {
                return this.CostField;
            }
            set
            {
                this.CostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated
        {
            get
            {
                return this.DateCreatedField;
            }
            set
            {
                this.DateCreatedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateExpires
        {
            get
            {
                return this.DateExpiresField;
            }
            set
            {
                this.DateExpiresField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPCountry
        {
            get
            {
                return this.IPCountryField;
            }
            set
            {
                this.IPCountryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.BasketItem[] Items
        {
            get
            {
                return this.ItemsField;
            }
            set
            {
                this.ItemsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModified
        {
            get
            {
                return this.LastModifiedField;
            }
            set
            {
                this.LastModifiedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Locked
        {
            get
            {
                return this.LockedField;
            }
            set
            {
                this.LockedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Referer
        {
            get
            {
                return this.RefererField;
            }
            set
            {
                this.RefererField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RemoteIP
        {
            get
            {
                return this.RemoteIPField;
            }
            set
            {
                this.RemoteIPField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionId
        {
            get
            {
                return this.SessionIdField;
            }
            set
            {
                this.SessionIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserAgent
        {
            get
            {
                return this.UserAgentField;
            }
            set
            {
                this.UserAgentField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BillingPeriod", Namespace="http://schemas.datacontract.org/2004/07/RapidSwitch.MyServersApi")]
    public enum BillingPeriod : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monthly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Quarterly = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Annually = 12,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasketItem", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class BasketItem : object
    {
        
        private System.Nullable<int> ContractLengthField;
        
        private MyServersApiSimulatorService.Cost CostField;
        
        private string DescnField;
        
        private string DiscountInfoField;
        
        private string IPToInstallOnField;
        
        private System.Guid ItemGuidField;
        
        private string NotesField;
        
        private MyServersApiSimulatorService.BasketItemOption[] OptionsField;
        
        private System.Guid ProductGuidField;
        
        private string ProductTypeField;
        
        private int QuantityField;
        
        private string ServiceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ContractLength
        {
            get
            {
                return this.ContractLengthField;
            }
            set
            {
                this.ContractLengthField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.Cost Cost
        {
            get
            {
                return this.CostField;
            }
            set
            {
                this.CostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descn
        {
            get
            {
                return this.DescnField;
            }
            set
            {
                this.DescnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiscountInfo
        {
            get
            {
                return this.DiscountInfoField;
            }
            set
            {
                this.DiscountInfoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPToInstallOn
        {
            get
            {
                return this.IPToInstallOnField;
            }
            set
            {
                this.IPToInstallOnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ItemGuid
        {
            get
            {
                return this.ItemGuidField;
            }
            set
            {
                this.ItemGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes
        {
            get
            {
                return this.NotesField;
            }
            set
            {
                this.NotesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.BasketItemOption[] Options
        {
            get
            {
                return this.OptionsField;
            }
            set
            {
                this.OptionsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ProductGuid
        {
            get
            {
                return this.ProductGuidField;
            }
            set
            {
                this.ProductGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductType
        {
            get
            {
                return this.ProductTypeField;
            }
            set
            {
                this.ProductTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceID
        {
            get
            {
                return this.ServiceIDField;
            }
            set
            {
                this.ServiceIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasketItemOption", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class BasketItemOption : object
    {
        
        private string CategoryField;
        
        private System.Guid CategoryGuidField;
        
        private string NotesField;
        
        private System.Guid OptionGuidField;
        
        private string TextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category
        {
            get
            {
                return this.CategoryField;
            }
            set
            {
                this.CategoryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CategoryGuid
        {
            get
            {
                return this.CategoryGuidField;
            }
            set
            {
                this.CategoryGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes
        {
            get
            {
                return this.NotesField;
            }
            set
            {
                this.NotesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OptionGuid
        {
            get
            {
                return this.OptionGuidField;
            }
            set
            {
                this.OptionGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class Order : object
    {
        
        private MyServersApiSimulatorService.Cost CostField;
        
        private System.DateTime DateCreatedField;
        
        private MyServersApiSimulatorService.OrderItem[] ItemsField;
        
        private string OrderRefField;
        
        private string PrivateRefField;
        
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.Cost Cost
        {
            get
            {
                return this.CostField;
            }
            set
            {
                this.CostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated
        {
            get
            {
                return this.DateCreatedField;
            }
            set
            {
                this.DateCreatedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.OrderItem[] Items
        {
            get
            {
                return this.ItemsField;
            }
            set
            {
                this.ItemsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderRef
        {
            get
            {
                return this.OrderRefField;
            }
            set
            {
                this.OrderRefField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrivateRef
        {
            get
            {
                return this.PrivateRefField;
            }
            set
            {
                this.PrivateRefField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderItem", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class OrderItem : object
    {
        
        private MyServersApiSimulatorService.Cost CostField;
        
        private string DescnField;
        
        private string ServiceIDField;
        
        private string StatusField;
        
        private string TextField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.Cost Cost
        {
            get
            {
                return this.CostField;
            }
            set
            {
                this.CostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descn
        {
            get
            {
                return this.DescnField;
            }
            set
            {
                this.DescnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceID
        {
            get
            {
                return this.ServiceIDField;
            }
            set
            {
                this.ServiceIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text
        {
            get
            {
                return this.TextField;
            }
            set
            {
                this.TextField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FAQ", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class FAQ : object
    {
        
        private string FooterTextField;
        
        private string HeaderTextField;
        
        private MyServersApiSimulatorService.FAQSection[] SectionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FooterText
        {
            get
            {
                return this.FooterTextField;
            }
            set
            {
                this.FooterTextField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HeaderText
        {
            get
            {
                return this.HeaderTextField;
            }
            set
            {
                this.HeaderTextField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.FAQSection[] Sections
        {
            get
            {
                return this.SectionsField;
            }
            set
            {
                this.SectionsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FAQSection", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class FAQSection : object
    {
        
        private MyServersApiSimulatorService.FAQQuestion[] QuestionsField;
        
        private string SectionField;
        
        private int SectionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.FAQQuestion[] Questions
        {
            get
            {
                return this.QuestionsField;
            }
            set
            {
                this.QuestionsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Section
        {
            get
            {
                return this.SectionField;
            }
            set
            {
                this.SectionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SectionID
        {
            get
            {
                return this.SectionIDField;
            }
            set
            {
                this.SectionIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FAQQuestion", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class FAQQuestion : object
    {
        
        private string AnswerField;
        
        private string QuestionField;
        
        private int QuestionIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer
        {
            get
            {
                return this.AnswerField;
            }
            set
            {
                this.AnswerField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Question
        {
            get
            {
                return this.QuestionField;
            }
            set
            {
                this.QuestionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionID
        {
            get
            {
                return this.QuestionIDField;
            }
            set
            {
                this.QuestionIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NullRoute", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class NullRoute : object
    {
        
        private System.DateTime DateAddedField;
        
        private string IPAddressField;
        
        private System.DateTime LastReviewedField;
        
        private string ReasonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded
        {
            get
            {
                return this.DateAddedField;
            }
            set
            {
                this.DateAddedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress
        {
            get
            {
                return this.IPAddressField;
            }
            set
            {
                this.IPAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastReviewed
        {
            get
            {
                return this.LastReviewedField;
            }
            set
            {
                this.LastReviewedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason
        {
            get
            {
                return this.ReasonField;
            }
            set
            {
                this.ReasonField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IPSafeListEntry", Namespace="http://schemas.datacontract.org/2004/07/RapidSwitch.MyServersApi")]
    public partial class IPSafeListEntry : object
    {
        
        private string IPAddressField;
        
        private string NotesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress
        {
            get
            {
                return this.IPAddressField;
            }
            set
            {
                this.IPAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes
        {
            get
            {
                return this.NotesField;
            }
            set
            {
                this.NotesField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Licence", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct Licence
    {
        
        private System.Nullable<System.DateTime> ExpiryDateField;
        
        private string ProviderReferenceField;
        
        private string ServiceIdField;
        
        private System.DateTime StartDateField;
        
        private string StatusField;
        
        private MyServersApiSimulatorService.LicenceType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpiryDate
        {
            get
            {
                return this.ExpiryDateField;
            }
            set
            {
                this.ExpiryDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderReference
        {
            get
            {
                return this.ProviderReferenceField;
            }
            set
            {
                this.ProviderReferenceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceId
        {
            get
            {
                return this.ServiceIdField;
            }
            set
            {
                this.ServiceIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate
        {
            get
            {
                return this.StartDateField;
            }
            set
            {
                this.StartDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.LicenceType Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenceType", Namespace="http://schemas.datacontract.org/2004/07/RapidSwitch.MyServersApi")]
    public enum LicenceType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cPanel = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cPanelVPS = 404,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AvailableLicenceType", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct AvailableLicenceType
    {
        
        private decimal CostField;
        
        private MyServersApiSimulatorService.LicenceType LicenceTypeField;
        
        private string NameField;
        
        private string ProviderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Cost
        {
            get
            {
                return this.CostField;
            }
            set
            {
                this.CostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.LicenceType LicenceType
        {
            get
            {
                return this.LicenceTypeField;
            }
            set
            {
                this.LicenceTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Provider
        {
            get
            {
                return this.ProviderField;
            }
            set
            {
                this.ProviderField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientInfo", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class ClientInfo : object
    {
        
        private System.Guid ClientGuidField;
        
        private string ClientNameField;
        
        private System.DateTime DateCreatedField;
        
        private System.DateTime LastModifiedField;
        
        private string Address1Field;
        
        private string Address2Field;
        
        private string Address3Field;
        
        private string Address4Field;
        
        private string PostcodeField;
        
        private string CountryField;
        
        private string TelNoField;
        
        private string FaxNoField;
        
        private bool IsPayPalEnabledField;
        
        private MyServersApiSimulatorService.IPVersion IPVersionField;
        
        private string VATNumberPrefixField;
        
        private string VATNumberField;
        
        private decimal BalanceField;
        
        private int NoOfUnpaidInvoicesField;
        
        private int NoOfOverdueInvoicesField;
        
        private MyServersApiSimulatorService.ContactInfo[] ContactsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientGuid
        {
            get
            {
                return this.ClientGuidField;
            }
            set
            {
                this.ClientGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName
        {
            get
            {
                return this.ClientNameField;
            }
            set
            {
                this.ClientNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated
        {
            get
            {
                return this.DateCreatedField;
            }
            set
            {
                this.DateCreatedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModified
        {
            get
            {
                return this.LastModifiedField;
            }
            set
            {
                this.LastModifiedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Address1
        {
            get
            {
                return this.Address1Field;
            }
            set
            {
                this.Address1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Address2
        {
            get
            {
                return this.Address2Field;
            }
            set
            {
                this.Address2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Address3
        {
            get
            {
                return this.Address3Field;
            }
            set
            {
                this.Address3Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string Address4
        {
            get
            {
                return this.Address4Field;
            }
            set
            {
                this.Address4Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string Postcode
        {
            get
            {
                return this.PostcodeField;
            }
            set
            {
                this.PostcodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string Country
        {
            get
            {
                return this.CountryField;
            }
            set
            {
                this.CountryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string TelNo
        {
            get
            {
                return this.TelNoField;
            }
            set
            {
                this.TelNoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string FaxNo
        {
            get
            {
                return this.FaxNoField;
            }
            set
            {
                this.FaxNoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public bool IsPayPalEnabled
        {
            get
            {
                return this.IsPayPalEnabledField;
            }
            set
            {
                this.IsPayPalEnabledField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public MyServersApiSimulatorService.IPVersion IPVersion
        {
            get
            {
                return this.IPVersionField;
            }
            set
            {
                this.IPVersionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public string VATNumberPrefix
        {
            get
            {
                return this.VATNumberPrefixField;
            }
            set
            {
                this.VATNumberPrefixField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public string VATNumber
        {
            get
            {
                return this.VATNumberField;
            }
            set
            {
                this.VATNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public decimal Balance
        {
            get
            {
                return this.BalanceField;
            }
            set
            {
                this.BalanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public int NoOfUnpaidInvoices
        {
            get
            {
                return this.NoOfUnpaidInvoicesField;
            }
            set
            {
                this.NoOfUnpaidInvoicesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public int NoOfOverdueInvoices
        {
            get
            {
                return this.NoOfOverdueInvoicesField;
            }
            set
            {
                this.NoOfOverdueInvoicesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public MyServersApiSimulatorService.ContactInfo[] Contacts
        {
            get
            {
                return this.ContactsField;
            }
            set
            {
                this.ContactsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IPVersion", Namespace="http://schemas.datacontract.org/2004/07/RapidSwitch.MyServersApi")]
    public enum IPVersion : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IPv4 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IPv6 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dual = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactInfo", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial class ContactInfo : object
    {
        
        private MyServersApiSimulatorService.ContactType TypeField;
        
        private string NameField;
        
        private string TelNoField;
        
        private string EmailField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.ContactType Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string TelNo
        {
            get
            {
                return this.TelNoField;
            }
            set
            {
                this.TelNoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactType", Namespace="http://schemas.datacontract.org/2004/07/RapidSwitch.MyServersApi")]
    public enum ContactType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tech = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Billing = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Emergency = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerInfo", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct ServerInfo
    {
        
        private string BandwidthUrlBaseField;
        
        private System.Nullable<System.DateTime> CancellationDateField;
        
        private System.DateTime DateAddedField;
        
        private string DeviceTypeField;
        
        private decimal ExtraCostField;
        
        private string[] IPAddressesField;
        
        private string[] IPv4AddressesField;
        
        private string[] IPv6AddressesField;
        
        private string LocationField;
        
        private decimal NormalCostField;
        
        private string PrimaryIPField;
        
        private string PrimaryIPv4Field;
        
        private string PrimaryIPv6Field;
        
        private MyServersApiSimulatorService.ReverseDnsEntry[] ReverseDnsEntriesField;
        
        private string ServiceDescriptionField;
        
        private string ServiceIDField;
        
        private string ServiceTypeField;
        
        private string StatusField;
        
        private bool SuspendedField;
        
        private bool SuspendedByRapidSwitchField;
        
        private string YourReferenceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BandwidthUrlBase
        {
            get
            {
                return this.BandwidthUrlBaseField;
            }
            set
            {
                this.BandwidthUrlBaseField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CancellationDate
        {
            get
            {
                return this.CancellationDateField;
            }
            set
            {
                this.CancellationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded
        {
            get
            {
                return this.DateAddedField;
            }
            set
            {
                this.DateAddedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceType
        {
            get
            {
                return this.DeviceTypeField;
            }
            set
            {
                this.DeviceTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtraCost
        {
            get
            {
                return this.ExtraCostField;
            }
            set
            {
                this.ExtraCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] IPAddresses
        {
            get
            {
                return this.IPAddressesField;
            }
            set
            {
                this.IPAddressesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] IPv4Addresses
        {
            get
            {
                return this.IPv4AddressesField;
            }
            set
            {
                this.IPv4AddressesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] IPv6Addresses
        {
            get
            {
                return this.IPv6AddressesField;
            }
            set
            {
                this.IPv6AddressesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NormalCost
        {
            get
            {
                return this.NormalCostField;
            }
            set
            {
                this.NormalCostField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryIP
        {
            get
            {
                return this.PrimaryIPField;
            }
            set
            {
                this.PrimaryIPField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryIPv4
        {
            get
            {
                return this.PrimaryIPv4Field;
            }
            set
            {
                this.PrimaryIPv4Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryIPv6
        {
            get
            {
                return this.PrimaryIPv6Field;
            }
            set
            {
                this.PrimaryIPv6Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.ReverseDnsEntry[] ReverseDnsEntries
        {
            get
            {
                return this.ReverseDnsEntriesField;
            }
            set
            {
                this.ReverseDnsEntriesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceDescription
        {
            get
            {
                return this.ServiceDescriptionField;
            }
            set
            {
                this.ServiceDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceID
        {
            get
            {
                return this.ServiceIDField;
            }
            set
            {
                this.ServiceIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceType
        {
            get
            {
                return this.ServiceTypeField;
            }
            set
            {
                this.ServiceTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Suspended
        {
            get
            {
                return this.SuspendedField;
            }
            set
            {
                this.SuspendedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SuspendedByRapidSwitch
        {
            get
            {
                return this.SuspendedByRapidSwitchField;
            }
            set
            {
                this.SuspendedByRapidSwitchField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YourReference
        {
            get
            {
                return this.YourReferenceField;
            }
            set
            {
                this.YourReferenceField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReverseDnsEntry", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct ReverseDnsEntry
    {
        
        private string HostNameField;
        
        private string IPAddressField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostName
        {
            get
            {
                return this.HostNameField;
            }
            set
            {
                this.HostNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress
        {
            get
            {
                return this.IPAddressField;
            }
            set
            {
                this.IPAddressField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerStatusSearch", Namespace="http://schemas.datacontract.org/2004/07/RapidSwitch.MyServersApi")]
    public enum ServerStatusSearch : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitingBuild = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitingDelivery = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwaitingInstallation = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Built = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelled = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerServiceTypeSearch", Namespace="http://schemas.datacontract.org/2004/07/RapidSwitch.MyServersApi")]
    public enum ServerServiceTypeSearch : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Colo = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dedi = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ManagedRack = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rack = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Transit = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VPS = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerDeviceTypeSearch", Namespace="http://schemas.datacontract.org/2004/07/RapidSwitch.MyServersApi")]
    public enum ServerDeviceTypeSearch : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Access_Point = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Firewall = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Full_Rack = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Load_Balancer = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Managed_Rack = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Managed_Switch = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modem = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Router = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Server = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Transit = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unmanaged_Switch = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Virtual_Server = 12,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NICInfo", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct NICInfo
    {
        
        private bool ConnectedField;
        
        private bool ConnectedToRapidSwitchField;
        
        private string ConnectedToServerField;
        
        private System.Nullable<int> ConnectedToServerNicField;
        
        private string[] IPAddressesField;
        
        private int NICIDField;
        
        private string NameField;
        
        private string PurposeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Connected
        {
            get
            {
                return this.ConnectedField;
            }
            set
            {
                this.ConnectedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ConnectedToRapidSwitch
        {
            get
            {
                return this.ConnectedToRapidSwitchField;
            }
            set
            {
                this.ConnectedToRapidSwitchField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectedToServer
        {
            get
            {
                return this.ConnectedToServerField;
            }
            set
            {
                this.ConnectedToServerField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ConnectedToServerNic
        {
            get
            {
                return this.ConnectedToServerNicField;
            }
            set
            {
                this.ConnectedToServerNicField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] IPAddresses
        {
            get
            {
                return this.IPAddressesField;
            }
            set
            {
                this.IPAddressesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NICID
        {
            get
            {
                return this.NICIDField;
            }
            set
            {
                this.NICIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Purpose
        {
            get
            {
                return this.PurposeField;
            }
            set
            {
                this.PurposeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IPInfo", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct IPInfo
    {
        
        private string CIDRField;
        
        private string DNSServer1Field;
        
        private string DNSServer2Field;
        
        private string DNSServer3Field;
        
        private string DefaultGatewayField;
        
        private string FirstAddressField;
        
        private string IPAddressField;
        
        private bool InUseField;
        
        private string LastAddressField;
        
        private bool NullRoutedField;
        
        private int PrefixLengthField;
        
        private string ReverseDNSField;
        
        private System.Nullable<int> SubnetIDField;
        
        private string SubnetMaskField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CIDR
        {
            get
            {
                return this.CIDRField;
            }
            set
            {
                this.CIDRField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DNSServer1
        {
            get
            {
                return this.DNSServer1Field;
            }
            set
            {
                this.DNSServer1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DNSServer2
        {
            get
            {
                return this.DNSServer2Field;
            }
            set
            {
                this.DNSServer2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DNSServer3
        {
            get
            {
                return this.DNSServer3Field;
            }
            set
            {
                this.DNSServer3Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultGateway
        {
            get
            {
                return this.DefaultGatewayField;
            }
            set
            {
                this.DefaultGatewayField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstAddress
        {
            get
            {
                return this.FirstAddressField;
            }
            set
            {
                this.FirstAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress
        {
            get
            {
                return this.IPAddressField;
            }
            set
            {
                this.IPAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InUse
        {
            get
            {
                return this.InUseField;
            }
            set
            {
                this.InUseField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastAddress
        {
            get
            {
                return this.LastAddressField;
            }
            set
            {
                this.LastAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NullRouted
        {
            get
            {
                return this.NullRoutedField;
            }
            set
            {
                this.NullRoutedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrefixLength
        {
            get
            {
                return this.PrefixLengthField;
            }
            set
            {
                this.PrefixLengthField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReverseDNS
        {
            get
            {
                return this.ReverseDNSField;
            }
            set
            {
                this.ReverseDNSField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubnetID
        {
            get
            {
                return this.SubnetIDField;
            }
            set
            {
                this.SubnetIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubnetMask
        {
            get
            {
                return this.SubnetMaskField;
            }
            set
            {
                this.SubnetMaskField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestStatus", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct RequestStatus
    {
        
        private System.Nullable<System.DateTime> DateCompletedField;
        
        private System.DateTime DateRequestedField;
        
        private System.Nullable<int> RequestIdField;
        
        private string RequestTypeField;
        
        private string ServiceIDField;
        
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateCompleted
        {
            get
            {
                return this.DateCompletedField;
            }
            set
            {
                this.DateCompletedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateRequested
        {
            get
            {
                return this.DateRequestedField;
            }
            set
            {
                this.DateRequestedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RequestId
        {
            get
            {
                return this.RequestIdField;
            }
            set
            {
                this.RequestIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestType
        {
            get
            {
                return this.RequestTypeField;
            }
            set
            {
                this.RequestTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceID
        {
            get
            {
                return this.ServiceIDField;
            }
            set
            {
                this.ServiceIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestStatusSearch", Namespace="http://schemas.datacontract.org/2004/07/RapidSwitch.MyServersApi")]
    public enum RequestStatusSearch : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecoverySessionDetails", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct RecoverySessionDetails
    {
        
        private bool ActiveField;
        
        private System.DateTime EndDateField;
        
        private string PasswordField;
        
        private bool RecoveryModeField;
        
        private int RequestIDField;
        
        private string RequestTypeField;
        
        private string ServiceIDField;
        
        private System.DateTime StartDateField;
        
        private string UrlField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active
        {
            get
            {
                return this.ActiveField;
            }
            set
            {
                this.ActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate
        {
            get
            {
                return this.EndDateField;
            }
            set
            {
                this.EndDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecoveryMode
        {
            get
            {
                return this.RecoveryModeField;
            }
            set
            {
                this.RecoveryModeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestID
        {
            get
            {
                return this.RequestIDField;
            }
            set
            {
                this.RequestIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestType
        {
            get
            {
                return this.RequestTypeField;
            }
            set
            {
                this.RequestTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceID
        {
            get
            {
                return this.ServiceIDField;
            }
            set
            {
                this.ServiceIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate
        {
            get
            {
                return this.StartDateField;
            }
            set
            {
                this.StartDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url
        {
            get
            {
                return this.UrlField;
            }
            set
            {
                this.UrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CancellationReason", Namespace="http://schemas.datacontract.org/2004/07/RapidSwitch.MyServersApi")]
    public enum CancellationReason : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MovingToAnotherProvider = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoLongerNeedService = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpgradingToAnotherRapidSwitchService = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnsatisfiedWithServiceLevel = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ServiceTooExpensive = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonthlyBandwidthReportEntry", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct MonthlyBandwidthReportEntry
    {
        
        private double BW95thPercentileField;
        
        private long BWInField;
        
        private long BWOutField;
        
        private long BWTotalField;
        
        private System.DateTime MonthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BW95thPercentile
        {
            get
            {
                return this.BW95thPercentileField;
            }
            set
            {
                this.BW95thPercentileField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BWIn
        {
            get
            {
                return this.BWInField;
            }
            set
            {
                this.BWInField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BWOut
        {
            get
            {
                return this.BWOutField;
            }
            set
            {
                this.BWOutField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BWTotal
        {
            get
            {
                return this.BWTotalField;
            }
            set
            {
                this.BWTotalField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Month
        {
            get
            {
                return this.MonthField;
            }
            set
            {
                this.MonthField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BandwidthReport", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct BandwidthReport
    {
        
        private long BW24hInField;
        
        private long BW24hOutField;
        
        private long BW4hInField;
        
        private long BW4hOutField;
        
        private long BWPredicted14dInField;
        
        private long BWPredicted14dOutField;
        
        private long BWPredicted24hInField;
        
        private long BWPredicted24hOutField;
        
        private long BWSofarThisMonthInField;
        
        private long BWSofarThisMonthOutField;
        
        private System.DateTime LastUpdatedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BW24hIn
        {
            get
            {
                return this.BW24hInField;
            }
            set
            {
                this.BW24hInField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BW24hOut
        {
            get
            {
                return this.BW24hOutField;
            }
            set
            {
                this.BW24hOutField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BW4hIn
        {
            get
            {
                return this.BW4hInField;
            }
            set
            {
                this.BW4hInField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BW4hOut
        {
            get
            {
                return this.BW4hOutField;
            }
            set
            {
                this.BW4hOutField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BWPredicted14dIn
        {
            get
            {
                return this.BWPredicted14dInField;
            }
            set
            {
                this.BWPredicted14dInField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BWPredicted14dOut
        {
            get
            {
                return this.BWPredicted14dOutField;
            }
            set
            {
                this.BWPredicted14dOutField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BWPredicted24hIn
        {
            get
            {
                return this.BWPredicted24hInField;
            }
            set
            {
                this.BWPredicted24hInField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BWPredicted24hOut
        {
            get
            {
                return this.BWPredicted24hOutField;
            }
            set
            {
                this.BWPredicted24hOutField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BWSofarThisMonthIn
        {
            get
            {
                return this.BWSofarThisMonthInField;
            }
            set
            {
                this.BWSofarThisMonthInField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BWSofarThisMonthOut
        {
            get
            {
                return this.BWSofarThisMonthOutField;
            }
            set
            {
                this.BWSofarThisMonthOutField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated
        {
            get
            {
                return this.LastUpdatedField;
            }
            set
            {
                this.LastUpdatedField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlertInfo", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct AlertInfo
    {
        
        private int AlertIdField;
        
        private bool AlertOnFailureField;
        
        private bool AlertOnWarningField;
        
        private string AlertTypeField;
        
        private string DestinationField;
        
        private int InitialDelayField;
        
        private int RepeatDelayField;
        
        private string ServiceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlertId
        {
            get
            {
                return this.AlertIdField;
            }
            set
            {
                this.AlertIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AlertOnFailure
        {
            get
            {
                return this.AlertOnFailureField;
            }
            set
            {
                this.AlertOnFailureField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AlertOnWarning
        {
            get
            {
                return this.AlertOnWarningField;
            }
            set
            {
                this.AlertOnWarningField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlertType
        {
            get
            {
                return this.AlertTypeField;
            }
            set
            {
                this.AlertTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination
        {
            get
            {
                return this.DestinationField;
            }
            set
            {
                this.DestinationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InitialDelay
        {
            get
            {
                return this.InitialDelayField;
            }
            set
            {
                this.InitialDelayField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RepeatDelay
        {
            get
            {
                return this.RepeatDelayField;
            }
            set
            {
                this.RepeatDelayField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceId
        {
            get
            {
                return this.ServiceIdField;
            }
            set
            {
                this.ServiceIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrentMonitorStatus", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct CurrentMonitorStatus
    {
        
        private System.DateTime LastStatusChangeField;
        
        private System.DateTime LastUpdatedField;
        
        private string MonitoredIpField;
        
        private string ServiceIdField;
        
        private string StatusCodeField;
        
        private string StatusDetailField;
        
        private string TestArg1Field;
        
        private int TestIdField;
        
        private string TestNameField;
        
        private string TestTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastStatusChange
        {
            get
            {
                return this.LastStatusChangeField;
            }
            set
            {
                this.LastStatusChangeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated
        {
            get
            {
                return this.LastUpdatedField;
            }
            set
            {
                this.LastUpdatedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MonitoredIp
        {
            get
            {
                return this.MonitoredIpField;
            }
            set
            {
                this.MonitoredIpField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceId
        {
            get
            {
                return this.ServiceIdField;
            }
            set
            {
                this.ServiceIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode
        {
            get
            {
                return this.StatusCodeField;
            }
            set
            {
                this.StatusCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDetail
        {
            get
            {
                return this.StatusDetailField;
            }
            set
            {
                this.StatusDetailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestArg1
        {
            get
            {
                return this.TestArg1Field;
            }
            set
            {
                this.TestArg1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TestId
        {
            get
            {
                return this.TestIdField;
            }
            set
            {
                this.TestIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestName
        {
            get
            {
                return this.TestNameField;
            }
            set
            {
                this.TestNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestType
        {
            get
            {
                return this.TestTypeField;
            }
            set
            {
                this.TestTypeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestResult", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct TestResult
    {
        
        private System.DateTime DateField;
        
        private string ServiceIdField;
        
        private string StatusCodeField;
        
        private string StatusDetailField;
        
        private int TestIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceId
        {
            get
            {
                return this.ServiceIdField;
            }
            set
            {
                this.ServiceIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCode
        {
            get
            {
                return this.StatusCodeField;
            }
            set
            {
                this.StatusCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDetail
        {
            get
            {
                return this.StatusDetailField;
            }
            set
            {
                this.StatusDetailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TestId
        {
            get
            {
                return this.TestIdField;
            }
            set
            {
                this.TestIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IPRequestStatus", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct IPRequestStatus
    {
        
        private int NumberRequestedField;
        
        private string RejectReasonField;
        
        private int RequestIdField;
        
        private string ServiceIdField;
        
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberRequested
        {
            get
            {
                return this.NumberRequestedField;
            }
            set
            {
                this.NumberRequestedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RejectReason
        {
            get
            {
                return this.RejectReasonField;
            }
            set
            {
                this.RejectReasonField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequestId
        {
            get
            {
                return this.RequestIdField;
            }
            set
            {
                this.RequestIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceId
        {
            get
            {
                return this.ServiceIdField;
            }
            set
            {
                this.ServiceIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubnetType", Namespace="http://schemas.datacontract.org/2004/07/RapidSwitch.MyServersApi")]
    public enum SubnetType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Public = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Private = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubnetInfo", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct SubnetInfo
    {
        
        private string CIDRField;
        
        private string[] DNSServersField;
        
        private string DefaultGatewayField;
        
        private bool IsPrivateField;
        
        private MyServersApiSimulatorService.IPPolicyType PolicyTypeField;
        
        private System.Nullable<int> SubnetIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CIDR
        {
            get
            {
                return this.CIDRField;
            }
            set
            {
                this.CIDRField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] DNSServers
        {
            get
            {
                return this.DNSServersField;
            }
            set
            {
                this.DNSServersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultGateway
        {
            get
            {
                return this.DefaultGatewayField;
            }
            set
            {
                this.DefaultGatewayField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrivate
        {
            get
            {
                return this.IsPrivateField;
            }
            set
            {
                this.IsPrivateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyServersApiSimulatorService.IPPolicyType PolicyType
        {
            get
            {
                return this.PolicyTypeField;
            }
            set
            {
                this.PolicyTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubnetID
        {
            get
            {
                return this.SubnetIDField;
            }
            set
            {
                this.SubnetIDField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IPPolicyType", Namespace="http://schemas.datacontract.org/2004/07/RapidSwitch.MyServersApi")]
    public enum IPPolicyType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ignore = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WarnOnly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoSuspend = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoSuspendUnlessSameClient = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DelayedAutoReassign = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoReassign = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HostedDomainInfo", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct HostedDomainInfo
    {
        
        private string AllowedTransferListField;
        
        private bool AuthorityStatusField;
        
        private System.Nullable<int> DefaultTTLField;
        
        private int DomainIdField;
        
        private string DomainNameField;
        
        private System.Nullable<System.DateTime> ExpiryDateField;
        
        private string HostingTypeField;
        
        private string PrimaryNSField;
        
        private bool SecondaryTransferStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AllowedTransferList
        {
            get
            {
                return this.AllowedTransferListField;
            }
            set
            {
                this.AllowedTransferListField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AuthorityStatus
        {
            get
            {
                return this.AuthorityStatusField;
            }
            set
            {
                this.AuthorityStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DefaultTTL
        {
            get
            {
                return this.DefaultTTLField;
            }
            set
            {
                this.DefaultTTLField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DomainId
        {
            get
            {
                return this.DomainIdField;
            }
            set
            {
                this.DomainIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainName
        {
            get
            {
                return this.DomainNameField;
            }
            set
            {
                this.DomainNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpiryDate
        {
            get
            {
                return this.ExpiryDateField;
            }
            set
            {
                this.ExpiryDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostingType
        {
            get
            {
                return this.HostingTypeField;
            }
            set
            {
                this.HostingTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryNS
        {
            get
            {
                return this.PrimaryNSField;
            }
            set
            {
                this.PrimaryNSField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SecondaryTransferStatus
        {
            get
            {
                return this.SecondaryTransferStatusField;
            }
            set
            {
                this.SecondaryTransferStatusField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HostedDomainRecord", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct HostedDomainRecord
    {
        
        private string[] RecordDataField;
        
        private int RecordIdField;
        
        private string RecordTypeField;
        
        private System.Nullable<int> TTLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] RecordData
        {
            get
            {
                return this.RecordDataField;
            }
            set
            {
                this.RecordDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordId
        {
            get
            {
                return this.RecordIdField;
            }
            set
            {
                this.RecordIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordType
        {
            get
            {
                return this.RecordTypeField;
            }
            set
            {
                this.RecordTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TTL
        {
            get
            {
                return this.TTLField;
            }
            set
            {
                this.TTLField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainContact", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct DomainContact
    {
        
        private int DomainContactIdField;
        
        private string EmailField;
        
        private string TitleField;
        
        private string ForenameField;
        
        private string MiddleNameField;
        
        private string SurnameField;
        
        private string CompanyField;
        
        private string TelephoneField;
        
        private string FaxField;
        
        private string Address1Field;
        
        private string Address2Field;
        
        private string Address3Field;
        
        private string TownField;
        
        private string CountyField;
        
        private string PostCodeField;
        
        private string CountryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DomainContactId
        {
            get
            {
                return this.DomainContactIdField;
            }
            set
            {
                this.DomainContactIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Forename
        {
            get
            {
                return this.ForenameField;
            }
            set
            {
                this.ForenameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string MiddleName
        {
            get
            {
                return this.MiddleNameField;
            }
            set
            {
                this.MiddleNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Surname
        {
            get
            {
                return this.SurnameField;
            }
            set
            {
                this.SurnameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Company
        {
            get
            {
                return this.CompanyField;
            }
            set
            {
                this.CompanyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string Telephone
        {
            get
            {
                return this.TelephoneField;
            }
            set
            {
                this.TelephoneField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string Fax
        {
            get
            {
                return this.FaxField;
            }
            set
            {
                this.FaxField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string Address1
        {
            get
            {
                return this.Address1Field;
            }
            set
            {
                this.Address1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string Address2
        {
            get
            {
                return this.Address2Field;
            }
            set
            {
                this.Address2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string Address3
        {
            get
            {
                return this.Address3Field;
            }
            set
            {
                this.Address3Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string Town
        {
            get
            {
                return this.TownField;
            }
            set
            {
                this.TownField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string County
        {
            get
            {
                return this.CountyField;
            }
            set
            {
                this.CountyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public string PostCode
        {
            get
            {
                return this.PostCodeField;
            }
            set
            {
                this.PostCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public string Country
        {
            get
            {
                return this.CountryField;
            }
            set
            {
                this.CountryField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainAvailability", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct DomainAvailability
    {
        
        private string DomainNameField;
        
        private string TLDField;
        
        private bool IsAvailableField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DomainName
        {
            get
            {
                return this.DomainNameField;
            }
            set
            {
                this.DomainNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TLD
        {
            get
            {
                return this.TLDField;
            }
            set
            {
                this.TLDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool IsAvailable
        {
            get
            {
                return this.IsAvailableField;
            }
            set
            {
                this.IsAvailableField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TopLevelDomain", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct TopLevelDomain
    {
        
        private string TLDField;
        
        private int MinPeriodField;
        
        private int MaxPeriodField;
        
        private decimal CostField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TLD
        {
            get
            {
                return this.TLDField;
            }
            set
            {
                this.TLDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int MinPeriod
        {
            get
            {
                return this.MinPeriodField;
            }
            set
            {
                this.MinPeriodField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int MaxPeriod
        {
            get
            {
                return this.MaxPeriodField;
            }
            set
            {
                this.MaxPeriodField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public decimal Cost
        {
            get
            {
                return this.CostField;
            }
            set
            {
                this.CostField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceHeader", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct InvoiceHeader
    {
        
        private System.DateTime DueDateField;
        
        private int IDField;
        
        private string InvoiceNoField;
        
        private bool PaidField;
        
        private decimal SubTotalField;
        
        private System.DateTime TaxDateField;
        
        private string TermsField;
        
        private decimal TotalField;
        
        private string TypeField;
        
        private decimal VATTotalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueDate
        {
            get
            {
                return this.DueDateField;
            }
            set
            {
                this.DueDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNo
        {
            get
            {
                return this.InvoiceNoField;
            }
            set
            {
                this.InvoiceNoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Paid
        {
            get
            {
                return this.PaidField;
            }
            set
            {
                this.PaidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubTotal
        {
            get
            {
                return this.SubTotalField;
            }
            set
            {
                this.SubTotalField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TaxDate
        {
            get
            {
                return this.TaxDateField;
            }
            set
            {
                this.TaxDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Terms
        {
            get
            {
                return this.TermsField;
            }
            set
            {
                this.TermsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total
        {
            get
            {
                return this.TotalField;
            }
            set
            {
                this.TotalField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VATTotal
        {
            get
            {
                return this.VATTotalField;
            }
            set
            {
                this.VATTotalField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceItem", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct InvoiceItem
    {
        
        private string DetailField;
        
        private string PrimaryIPField;
        
        private decimal QuantityField;
        
        private decimal RateField;
        
        private string ServiceIDField;
        
        private string SummaryField;
        
        private decimal TotalField;
        
        private decimal VATAmountField;
        
        private decimal VATRateField;
        
        private string YourServerRefField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Detail
        {
            get
            {
                return this.DetailField;
            }
            set
            {
                this.DetailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryIP
        {
            get
            {
                return this.PrimaryIPField;
            }
            set
            {
                this.PrimaryIPField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rate
        {
            get
            {
                return this.RateField;
            }
            set
            {
                this.RateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceID
        {
            get
            {
                return this.ServiceIDField;
            }
            set
            {
                this.ServiceIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary
        {
            get
            {
                return this.SummaryField;
            }
            set
            {
                this.SummaryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total
        {
            get
            {
                return this.TotalField;
            }
            set
            {
                this.TotalField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VATAmount
        {
            get
            {
                return this.VATAmountField;
            }
            set
            {
                this.VATAmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VATRate
        {
            get
            {
                return this.VATRateField;
            }
            set
            {
                this.VATRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string YourServerRef
        {
            get
            {
                return this.YourServerRefField;
            }
            set
            {
                this.YourServerRefField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSummary", Namespace="http://rapidswitch.com/services/MyServersApi")]
    public partial struct AccountSummary
    {
        
        private decimal BalanceField;
        
        private decimal NextPaymentAmountField;
        
        private System.DateTime NextPaymentDateField;
        
        private int OverdueInvoicesField;
        
        private int UnpaidInvoicesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance
        {
            get
            {
                return this.BalanceField;
            }
            set
            {
                this.BalanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NextPaymentAmount
        {
            get
            {
                return this.NextPaymentAmountField;
            }
            set
            {
                this.NextPaymentAmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NextPaymentDate
        {
            get
            {
                return this.NextPaymentDateField;
            }
            set
            {
                this.NextPaymentDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OverdueInvoices
        {
            get
            {
                return this.OverdueInvoicesField;
            }
            set
            {
                this.OverdueInvoicesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnpaidInvoices
        {
            get
            {
                return this.UnpaidInvoicesField;
            }
            set
            {
                this.UnpaidInvoicesField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://rapidswitch.com/services/MyServersApi", ConfigurationName="MyServersApiSimulatorService.IMyServersApi")]
    public interface IMyServersApi
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetUnreadMessages", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetUnreadMessagesRespo" +
            "nse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Message[]> GetUnreadMessagesAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetMessageCount", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetMessageCountRespons" +
            "e")]
        System.Threading.Tasks.Task<int> GetMessageCountAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllMessages", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllMessagesResponse" +
            "")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Message[]> GetAllMessagesAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetMessage", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetMessageResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Message> GetMessageAsync(MyServersApiSimulatorService.AuthInfo authInfo, int messageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/MarkMessageAsRead", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/MarkMessageAsReadRespo" +
            "nse")]
        System.Threading.Tasks.Task MarkMessageAsReadAsync(MyServersApiSimulatorService.AuthInfo authInfo, int messageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetServerCredentials", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetServerCredentialsRe" +
            "sponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ServerCredential[]> GetServerCredentialsAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.ServerCredentialType type, string serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/WriteServerCredential", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/WriteServerCredentialR" +
            "esponse")]
        System.Threading.Tasks.Task WriteServerCredentialAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.ServerCredential cred);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveServerCredential" +
            "", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveServerCredential" +
            "Response")]
        System.Threading.Tasks.Task RemoveServerCredentialAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, MyServersApiSimulatorService.ServerCredentialType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductType", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductTypeResponse" +
            "")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ProductType> GetProductTypeAsync(MyServersApiSimulatorService.AuthInfo authInfo, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductTypes", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductTypesRespons" +
            "e")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ProductType[]> GetProductTypesAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProduct", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Product> GetProductAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid productGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProducts", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductsResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Product[]> GetProductsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string productType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductInfoFields", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductInfoFieldsRe" +
            "sponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ProductInfoField[]> GetProductInfoFieldsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string productType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductRules", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductRulesRespons" +
            "e")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ProductRule[]> GetProductRulesAsync(MyServersApiSimulatorService.AuthInfo authInfo, string productType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductOptionsByTyp" +
            "e", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductOptionsByTyp" +
            "eResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ProductOptionGroup[]> GetProductOptionsByTypeAsync(MyServersApiSimulatorService.AuthInfo authInfo, string productType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductOptionsByID", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductOptionsByIDR" +
            "esponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ProductOptionGroup[]> GetProductOptionsByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid productGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductOptions", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetProductOptionsRespo" +
            "nse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ProductOption[]> GetProductOptionsAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid productGuid, System.Guid optionGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllChassisForSale", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllChassisForSaleRe" +
            "sponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ChassisForSale[]> GetAllChassisForSaleAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllChassisForSaleBy" +
            "Type", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllChassisForSaleBy" +
            "TypeResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ChassisForSale[]> GetAllChassisForSaleByTypeAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, string search, MyServersApiSimulatorService.ChassisForSaleType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetChassisForSale", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetChassisForSaleRespo" +
            "nse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ChassisForSale> GetChassisForSaleAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid chassisGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllChassisGroups", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllChassisGroupsRes" +
            "ponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ChassisGroup[]> GetAllChassisGroupsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllReservedChassisG" +
            "roups", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllReservedChassisG" +
            "roupsResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ChassisGroup[]> GetAllReservedChassisGroupsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllReservedChassisG" +
            "roupsForClient", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllReservedChassisG" +
            "roupsForClientResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ChassisGroup[]> GetAllReservedChassisGroupsForClientAsync(MyServersApiSimulatorService.AuthInfo authInfo, int clientId, string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetChassisGroup", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetChassisGroupRespons" +
            "e")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ChassisGroup> GetChassisGroupAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetNextChassisFromGrou" +
            "p", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetNextChassisFromGrou" +
            "pResponse")]
        System.Threading.Tasks.Task<System.Guid> GetNextChassisFromGroupAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid chassisGroupGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RefreshBMCache", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RefreshBMCacheResponse" +
            "")]
        System.Threading.Tasks.Task RefreshBMCacheAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetBasket", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetBasketResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> GetBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/IsBasketLocked", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/IsBasketLockedResponse" +
            "")]
        System.Threading.Tasks.Task<bool> IsBasketLockedAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetBasketsByEmail", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetBasketsByEmailRespo" +
            "nse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket[]> GetBasketsByEmailAsync(MyServersApiSimulatorService.AuthInfo authInfo, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetBasketItem", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetBasketItemResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.BasketItem> GetBasketItemAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, System.Guid itemGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CalcCosts", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CalcCostsResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Cost> CalcCostsAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid productGuid, MyServersApiSimulatorService.BasketItemOption[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/DeleteBasketByID", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/DeleteBasketByIDRespon" +
            "se")]
        System.Threading.Tasks.Task DeleteBasketByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/DeleteBasket", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/DeleteBasketResponse")]
        System.Threading.Tasks.Task DeleteBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/EmptyBasketByID", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/EmptyBasketByIDRespons" +
            "e")]
        System.Threading.Tasks.Task EmptyBasketByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/EmptyBasket", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/EmptyBasketResponse")]
        System.Threading.Tasks.Task EmptyBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CreateBasket", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CreateBasketResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> CreateBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CreateBasketByID", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CreateBasketByIDRespon" +
            "se")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> CreateBasketByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, string email, string remoteIP, string userAgent, string referer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddItemToBasketByID", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddItemToBasketByIDRes" +
            "ponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> AddItemToBasketByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, string descn, System.Guid productGuid, int quantity, string ipToInstallOn, string notes, MyServersApiSimulatorService.BasketItemOption[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddItemToBasket", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddItemToBasketRespons" +
            "e")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> AddItemToBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket, MyServersApiSimulatorService.BasketItem item, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/UpdateBasketItemByID", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/UpdateBasketItemByIDRe" +
            "sponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> UpdateBasketItemByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, System.Guid itemGuid, int quantity, string ipToInstallOn, string notes, MyServersApiSimulatorService.BasketItemOption[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/UpdateBasketItem", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/UpdateBasketItemRespon" +
            "se")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> UpdateBasketItemAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket, MyServersApiSimulatorService.BasketItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveItemFromBasketBy" +
            "ID", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveItemFromBasketBy" +
            "IDResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> RemoveItemFromBasketByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, System.Guid itemGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveItemFromBasket", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveItemFromBasketRe" +
            "sponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> RemoveItemFromBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket, MyServersApiSimulatorService.BasketItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ValidateBasketByID", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ValidateBasketByIDResp" +
            "onse")]
        System.Threading.Tasks.Task<string[]> ValidateBasketByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ValidateBasket", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ValidateBasketResponse" +
            "")]
        System.Threading.Tasks.Task<string[]> ValidateBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ValidateBasketItemByID" +
            "", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ValidateBasketItemByID" +
            "Response")]
        System.Threading.Tasks.Task<string[]> ValidateBasketItemByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, System.Guid itemGuid, System.Guid productGuid, MyServersApiSimulatorService.BasketItemOption[] options);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ValidateBasketItem", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ValidateBasketItemResp" +
            "onse")]
        System.Threading.Tasks.Task<string[]> ValidateBasketItemAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket, MyServersApiSimulatorService.BasketItem basketItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ChangeBillingPeriod", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ChangeBillingPeriodRes" +
            "ponse")]
        System.Threading.Tasks.Task ChangeBillingPeriodAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, MyServersApiSimulatorService.BillingPeriod billingPeriod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/OrderBasketByID", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/OrderBasketByIDRespons" +
            "e")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Order> OrderBasketByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, MyServersApiSimulatorService.BillingPeriod billingPeriod, string privateRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/OrderBasket", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/OrderBasketResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Order> OrderBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket, string privateRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ChangeQuantityByID", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ChangeQuantityByIDResp" +
            "onse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> ChangeQuantityByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, System.Guid itemGuid, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ChangeQuantity", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ChangeQuantityResponse" +
            "")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> ChangeQuantityAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket, MyServersApiSimulatorService.BasketItem item, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetOrder", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetOrderResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Order> GetOrderAsync(MyServersApiSimulatorService.AuthInfo authInfo, string orderRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetOrderByPrivateRef", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetOrderByPrivateRefRe" +
            "sponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Order[]> GetOrderByPrivateRefAsync(MyServersApiSimulatorService.AuthInfo authInfo, string privateRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllPendingOrders", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllPendingOrdersRes" +
            "ponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Order[]> GetAllPendingOrdersAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllCompletedOrders", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllCompletedOrdersR" +
            "esponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Order[]> GetAllCompletedOrdersAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllCancelledOrders", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllCancelledOrdersR" +
            "esponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Order[]> GetAllCancelledOrdersAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetFAQ", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetFAQResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.FAQ> GetFAQAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllSections", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllSectionsResponse" +
            "")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.FAQSection[]> GetAllSectionsAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllQuestions", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllQuestionsRespons" +
            "e")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.FAQQuestion[]> GetAllQuestionsAsync(MyServersApiSimulatorService.AuthInfo authInfo, int sectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetSection", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetSectionResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.FAQSection> GetSectionAsync(MyServersApiSimulatorService.AuthInfo authInfo, int sectionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetQuestion", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetQuestionResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.FAQQuestion> GetQuestionAsync(MyServersApiSimulatorService.AuthInfo authInfo, int questionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddNullRoute", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddNullRouteResponse")]
        System.Threading.Tasks.Task AddNullRouteAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ipAddress, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ClearNullRoute", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ClearNullRouteResponse" +
            "")]
        System.Threading.Tasks.Task ClearNullRouteAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetActiveNullRoutes", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetActiveNullRoutesRes" +
            "ponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.NullRoute[]> GetActiveNullRoutesAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/WriteIPSafeList", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/WriteIPSafeListRespons" +
            "e")]
        System.Threading.Tasks.Task WriteIPSafeListAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ipAddress, string notes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/DeleteIPSafeList", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/DeleteIPSafeListRespon" +
            "se")]
        System.Threading.Tasks.Task DeleteIPSafeListAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetIPSafeList", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetIPSafeListResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.IPSafeListEntry[]> GetIPSafeListAsync(MyServersApiSimulatorService.AuthInfo authInfo, string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetLicences", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetLicencesResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.Licence[]> GetLicencesAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddLicence", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddLicenceResponse")]
        System.Threading.Tasks.Task AddLicenceAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, MyServersApiSimulatorService.LicenceType type, string licenceIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetLicenceTypes", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetLicenceTypesRespons" +
            "e")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.AvailableLicenceType[]> GetLicenceTypesAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveLicenceByIPAddre" +
            "ss", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveLicenceByIPAddre" +
            "ssResponse")]
        System.Threading.Tasks.Task RemoveLicenceByIPAddressAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, MyServersApiSimulatorService.LicenceType type, string licenceIPAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveLicenceByProvide" +
            "rReference", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveLicenceByProvide" +
            "rReferenceResponse")]
        System.Threading.Tasks.Task RemoveLicenceByProviderReferenceAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, string providerReference);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AreCredentialsValid", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AreCredentialsValidRes" +
            "ponse")]
        System.Threading.Tasks.Task<bool> AreCredentialsValidAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetClientInfo", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetClientInfoResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ClientInfo> GetClientInfoAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.AuthInfo authClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAvailableIPs", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAvailableIPsRespons" +
            "e")]
        System.Threading.Tasks.Task<string[]> GetAvailableIPsAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid clientGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetServerCount", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetServerCountResponse" +
            "")]
        System.Threading.Tasks.Task<int> GetServerCountAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllServerIDs", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllServerIDsRespons" +
            "e")]
        System.Threading.Tasks.Task<string[]> GetAllServerIDsAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetServerByIPAddress", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetServerByIPAddressRe" +
            "sponse")]
        System.Threading.Tasks.Task<string> GetServerByIPAddressAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetServerDetails", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetServerDetailsRespon" +
            "se")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ServerInfo> GetServerDetailsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllServerDetails", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllServerDetailsRes" +
            "ponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ServerInfo[]> GetAllServerDetailsAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/SearchServers", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/SearchServersResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ServerInfo[]> SearchServersAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.ServerStatusSearch[] status, MyServersApiSimulatorService.ServerServiceTypeSearch[] serviceType, MyServersApiSimulatorService.ServerDeviceTypeSearch[] deviceType, string filter, bool showIPs, bool showComponents, bool showReverseDNS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllCurrentServers", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllCurrentServersRe" +
            "sponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ServerInfo[]> GetAllCurrentServersAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetServerNICs", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetServerNICsResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.NICInfo[]> GetServerNICsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/LookupIP", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/LookupIPResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.IPInfo> LookupIPAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/LookupPrivateIP", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/LookupPrivateIPRespons" +
            "e")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.IPInfo> LookupPrivateIPAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ip, System.Nullable<int> subnetID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/PowerCycleServer", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/PowerCycleServerRespon" +
            "se")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.RequestStatus> PowerCycleServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetRemainingKvmCount", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetRemainingKvmCountRe" +
            "sponse")]
        System.Threading.Tasks.Task<int> GetRemainingKvmCountAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetRemainingRecoverySe" +
            "ssionCount", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetRemainingRecoverySe" +
            "ssionCountResponse")]
        System.Threading.Tasks.Task<int> GetRemainingRecoverySessionCountAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RequestKvm", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RequestKvmResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.RequestStatus> RequestKvmAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RequestRecoverySession" +
            "", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RequestRecoverySession" +
            "Response")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.RequestStatus> RequestRecoverySessionAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetRequestStatusUpdate" +
            "", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetRequestStatusUpdate" +
            "Response")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.RequestStatus> GetRequestStatusUpdateAsync(MyServersApiSimulatorService.AuthInfo authInfo, int requestid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllRequestStatusUpd" +
            "ate", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllRequestStatusUpd" +
            "ateResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.RequestStatus[]> GetAllRequestStatusUpdateAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.RequestStatusSearch search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetSessionDetails", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetSessionDetailsRespo" +
            "nse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.RecoverySessionDetails> GetSessionDetailsAsync(MyServersApiSimulatorService.AuthInfo authInfo, int requestid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/SetRecoveryMode", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/SetRecoveryModeRespons" +
            "e")]
        System.Threading.Tasks.Task SetRecoveryModeAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, bool recoverymode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/SetYourServerRef", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/SetYourServerRefRespon" +
            "se")]
        System.Threading.Tasks.Task SetYourServerRefAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, string yourServerRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CancelRequest", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CancelRequestResponse")]
        System.Threading.Tasks.Task CancelRequestAsync(MyServersApiSimulatorService.AuthInfo authInfo, int requestid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/TerminateKVM", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/TerminateKVMResponse")]
        System.Threading.Tasks.Task TerminateKVMAsync(MyServersApiSimulatorService.AuthInfo authInfo, int requestid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CancelServer", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CancelServerResponse")]
        System.Threading.Tasks.Task CancelServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, System.DateTime cancellationDate, MyServersApiSimulatorService.CancellationReason reason, string details, string comments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/UncancelServer", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/UncancelServerResponse" +
            "")]
        System.Threading.Tasks.Task UncancelServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/SuspendServer", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/SuspendServerResponse")]
        System.Threading.Tasks.Task SuspendServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/UnsuspendServer", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/UnsuspendServerRespons" +
            "e")]
        System.Threading.Tasks.Task UnsuspendServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetReverseDnsEntries", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetReverseDnsEntriesRe" +
            "sponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.ReverseDnsEntry[]> GetReverseDnsEntriesAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetReverseDnsEntry", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetReverseDnsEntryResp" +
            "onse")]
        System.Threading.Tasks.Task<string> GetReverseDnsEntryAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/SetReverseDnsEntry", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/SetReverseDnsEntryResp" +
            "onse")]
        System.Threading.Tasks.Task SetReverseDnsEntryAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ip, string hostname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetMonthlyBandwidthRep" +
            "ort", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetMonthlyBandwidthRep" +
            "ortResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.MonthlyBandwidthReportEntry[]> GetMonthlyBandwidthReportAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, bool external);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetServerBandwidthRepo" +
            "rt", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetServerBandwidthRepo" +
            "rtResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.BandwidthReport> GetServerBandwidthReportAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, bool external);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAlerts", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAlertsResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.AlertInfo[]> GetAlertsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddAlert", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddAlertResponse")]
        System.Threading.Tasks.Task<int> AddAlertAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, string alertType, string dest, System.Nullable<int> initDelay, System.Nullable<int> repeatDelay, System.Nullable<bool> alertOnWarn, System.Nullable<bool> alertOnFail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveAlert", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveAlertResponse")]
        System.Threading.Tasks.Task RemoveAlertAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, int alertId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllTestIDs", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllTestIDsResponse")]
        System.Threading.Tasks.Task<int[]> GetAllTestIDsAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetServerStatus", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetServerStatusRespons" +
            "e")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.CurrentMonitorStatus[]> GetServerStatusAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetMultipleServerStatu" +
            "s", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetMultipleServerStatu" +
            "sResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.CurrentMonitorStatus[]> GetMultipleServerStatusAsync(MyServersApiSimulatorService.AuthInfo authInfo, string[] serviceIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllServerIssues", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllServerIssuesResp" +
            "onse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.CurrentMonitorStatus[]> GetAllServerIssuesAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllServerIssues2", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllServerIssues2Res" +
            "ponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.CurrentMonitorStatus[]> GetAllServerIssues2Async(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetTestHistory", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetTestHistoryResponse" +
            "")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.TestResult[]> GetTestHistoryAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, int testId, int rows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetMultipleTestResults" +
            "", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetMultipleTestResults" +
            "Response")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.TestResult[]> GetMultipleTestResultsAsync(MyServersApiSimulatorService.AuthInfo authInfo, int[] testIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetTestTypes", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetTestTypesResponse")]
        System.Threading.Tasks.Task<string[]> GetTestTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddTest", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddTestResponse")]
        System.Threading.Tasks.Task<int> AddTestAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, string testType, string ip, string arg1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveTest", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveTestResponse")]
        System.Threading.Tasks.Task RemoveTestAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, int testId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RequestIPs", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RequestIPsResponse")]
        System.Threading.Tasks.Task<int> RequestIPsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, int number, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetIPRequestStatus", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetIPRequestStatusResp" +
            "onse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.IPRequestStatus> GetIPRequestStatusAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, int requestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetSubnets", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetSubnetsResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.SubnetInfo[]> GetSubnetsAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.SubnetType type, string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetSubnet", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetSubnetResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.SubnetInfo> GetSubnetAsync(MyServersApiSimulatorService.AuthInfo authInfo, int subnetid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CreateQuickSubnet", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CreateQuickSubnetRespo" +
            "nse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.SubnetInfo> CreateQuickSubnetAsync(MyServersApiSimulatorService.AuthInfo authInfo, string cidrstring);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CreateSubnet", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CreateSubnetResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.SubnetInfo> CreateSubnetAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.SubnetInfo si);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ChangeSubnet", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/ChangeSubnetResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.SubnetInfo> ChangeSubnetAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.SubnetInfo subnet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/DeleteSubnet", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/DeleteSubnetResponse")]
        System.Threading.Tasks.Task DeleteSubnetAsync(MyServersApiSimulatorService.AuthInfo authInfo, int subnetid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetIPAddressesForSubne" +
            "t", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetIPAddressesForSubne" +
            "tResponse")]
        System.Threading.Tasks.Task<string[]> GetIPAddressesForSubnetAsync(MyServersApiSimulatorService.AuthInfo authInfo, int subnetID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AssignIPToServer", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AssignIPToServerRespon" +
            "se")]
        System.Threading.Tasks.Task AssignIPToServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, int subnetid, string ipaddr, int nicid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveIPFromServer", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RemoveIPFromServerResp" +
            "onse")]
        System.Threading.Tasks.Task RemoveIPFromServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, int subnetid, string ipaddr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetDomainCount", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetDomainCountResponse" +
            "")]
        System.Threading.Tasks.Task<int> GetDomainCountAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetForwardDnsDomains", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetForwardDnsDomainsRe" +
            "sponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.HostedDomainInfo[]> GetForwardDnsDomainsAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetForwardDnsDomain", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetForwardDnsDomainRes" +
            "ponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.HostedDomainInfo> GetForwardDnsDomainAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddForwardDnsDomain", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddForwardDnsDomainRes" +
            "ponse")]
        System.Threading.Tasks.Task<int> AddForwardDnsDomainAsync(MyServersApiSimulatorService.AuthInfo authInfo, string domainName, string hostingType, string primaryNS);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/DeleteForwardDnsDomain" +
            "", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/DeleteForwardDnsDomain" +
            "Response")]
        System.Threading.Tasks.Task DeleteForwardDnsDomainAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/UpdateDomainHostingSet" +
            "tings", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/UpdateDomainHostingSet" +
            "tingsResponse")]
        System.Threading.Tasks.Task UpdateDomainHostingSettingsAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string hostingType, string primaryNS, string allowedTransferList, System.Nullable<int> defaultTTL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetForwardDnsEntries", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetForwardDnsEntriesRe" +
            "sponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.HostedDomainRecord[]> GetForwardDnsEntriesAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/DeleteForwardDnsEntry", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/DeleteForwardDnsEntryR" +
            "esponse")]
        System.Threading.Tasks.Task DeleteForwardDnsEntryAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, int recordId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsARecord", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsARecordResponse")]
        System.Threading.Tasks.Task AddDnsARecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string recordName, string ip, System.Nullable<int> ttl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsAAAARecord", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsAAAARecordRespon" +
            "se")]
        System.Threading.Tasks.Task AddDnsAAAARecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string recordName, string ip, System.Nullable<int> ttl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsCNAMERecord", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsCNAMERecordRespo" +
            "nse")]
        System.Threading.Tasks.Task AddDnsCNAMERecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string recordName, string destination, System.Nullable<int> ttl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsMXRecord", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsMXRecordResponse" +
            "")]
        System.Threading.Tasks.Task AddDnsMXRecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string mailServer, int priority, string subDomain, System.Nullable<int> ttl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsNSRecord", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsNSRecordResponse" +
            "")]
        System.Threading.Tasks.Task AddDnsNSRecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string hostName, string subDomain, System.Nullable<int> ttl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsSRVRecord", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsSRVRecordRespons" +
            "e")]
        System.Threading.Tasks.Task AddDnsSRVRecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string serviceName, int priority, int weight, int port, string hostName, System.Nullable<int> ttl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsTXTRecord", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsTXTRecordRespons" +
            "e")]
        System.Threading.Tasks.Task AddDnsTXTRecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string recordName, string data, System.Nullable<int> ttl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsSPFRecord", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/AddDnsSPFRecordRespons" +
            "e")]
        System.Threading.Tasks.Task AddDnsSPFRecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string subDomain, string spfData, System.Nullable<int> ttl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetDomainContacts", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetDomainContactsRespo" +
            "nse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.DomainContact[]> GetDomainContactsAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CheckDomainAvailabilit" +
            "y", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CheckDomainAvailabilit" +
            "yResponse")]
        System.Threading.Tasks.Task<bool> CheckDomainAvailabilityAsync(MyServersApiSimulatorService.AuthInfo authInfo, string domainName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CheckMultipleDomainsAv" +
            "ailability", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/CheckMultipleDomainsAv" +
            "ailabilityResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.DomainAvailability[]> CheckMultipleDomainsAvailabilityAsync(MyServersApiSimulatorService.AuthInfo authInfo, string[] domainNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllTLDs", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAllTLDsResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.TopLevelDomain[]> GetAllTLDsAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RegisterDomain", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RegisterDomainResponse" +
            "")]
        System.Threading.Tasks.Task<string> RegisterDomainAsync(MyServersApiSimulatorService.AuthInfo authInfo, string domainName, int years, int techContactId, int adminContactId, int ownerContactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RegisterDomains", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/RegisterDomainsRespons" +
            "e")]
        System.Threading.Tasks.Task<string> RegisterDomainsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string[] domainNames, int years, int techContactId, int adminContactId, int ownerContactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetInvoiceHeaders", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetInvoiceHeadersRespo" +
            "nse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.InvoiceHeader[]> GetInvoiceHeadersAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetInvoiceItems", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetInvoiceItemsRespons" +
            "e")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.InvoiceItem[]> GetInvoiceItemsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string invoiceNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetInvoiceItemsByServe" +
            "r", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetInvoiceItemsByServe" +
            "rResponse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.InvoiceItem[]> GetInvoiceItemsByServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, string invoiceNo, string serviceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAccountSummary", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetAccountSummaryRespo" +
            "nse")]
        System.Threading.Tasks.Task<MyServersApiSimulatorService.AccountSummary> GetAccountSummaryAsync(MyServersApiSimulatorService.AuthInfo authInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetUnreadMessageCount", ReplyAction="http://rapidswitch.com/services/MyServersApi/IMyServersApi/GetUnreadMessageCountR" +
            "esponse")]
        System.Threading.Tasks.Task<int> GetUnreadMessageCountAsync(MyServersApiSimulatorService.AuthInfo authInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IMyServersApiChannel : MyServersApiSimulatorService.IMyServersApi, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class MyServersApiClient : System.ServiceModel.ClientBase<MyServersApiSimulatorService.IMyServersApi>, MyServersApiSimulatorService.IMyServersApi
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MyServersApiClient() : 
                base(MyServersApiClient.GetDefaultBinding(), MyServersApiClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IMyServersApi.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyServersApiClient(EndpointConfiguration endpointConfiguration) : 
                base(MyServersApiClient.GetBindingForEndpoint(endpointConfiguration), MyServersApiClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyServersApiClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MyServersApiClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyServersApiClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MyServersApiClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyServersApiClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Message[]> GetUnreadMessagesAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetUnreadMessagesAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<int> GetMessageCountAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetMessageCountAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Message[]> GetAllMessagesAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetAllMessagesAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Message> GetMessageAsync(MyServersApiSimulatorService.AuthInfo authInfo, int messageID)
        {
            return base.Channel.GetMessageAsync(authInfo, messageID);
        }
        
        public System.Threading.Tasks.Task MarkMessageAsReadAsync(MyServersApiSimulatorService.AuthInfo authInfo, int messageID)
        {
            return base.Channel.MarkMessageAsReadAsync(authInfo, messageID);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ServerCredential[]> GetServerCredentialsAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.ServerCredentialType type, string serviceId)
        {
            return base.Channel.GetServerCredentialsAsync(authInfo, type, serviceId);
        }
        
        public System.Threading.Tasks.Task WriteServerCredentialAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.ServerCredential cred)
        {
            return base.Channel.WriteServerCredentialAsync(authInfo, cred);
        }
        
        public System.Threading.Tasks.Task RemoveServerCredentialAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, MyServersApiSimulatorService.ServerCredentialType type)
        {
            return base.Channel.RemoveServerCredentialAsync(authInfo, serviceId, type);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ProductType> GetProductTypeAsync(MyServersApiSimulatorService.AuthInfo authInfo, string code)
        {
            return base.Channel.GetProductTypeAsync(authInfo, code);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ProductType[]> GetProductTypesAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetProductTypesAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Product> GetProductAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid productGuid)
        {
            return base.Channel.GetProductAsync(authInfo, productGuid);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Product[]> GetProductsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string productType)
        {
            return base.Channel.GetProductsAsync(authInfo, productType);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ProductInfoField[]> GetProductInfoFieldsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string productType)
        {
            return base.Channel.GetProductInfoFieldsAsync(authInfo, productType);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ProductRule[]> GetProductRulesAsync(MyServersApiSimulatorService.AuthInfo authInfo, string productType)
        {
            return base.Channel.GetProductRulesAsync(authInfo, productType);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ProductOptionGroup[]> GetProductOptionsByTypeAsync(MyServersApiSimulatorService.AuthInfo authInfo, string productType)
        {
            return base.Channel.GetProductOptionsByTypeAsync(authInfo, productType);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ProductOptionGroup[]> GetProductOptionsByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid productGuid)
        {
            return base.Channel.GetProductOptionsByIDAsync(authInfo, productGuid);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ProductOption[]> GetProductOptionsAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid productGuid, System.Guid optionGuid)
        {
            return base.Channel.GetProductOptionsAsync(authInfo, productGuid, optionGuid);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ChassisForSale[]> GetAllChassisForSaleAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, string search)
        {
            return base.Channel.GetAllChassisForSaleAsync(authInfo, basketGuid, search);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ChassisForSale[]> GetAllChassisForSaleByTypeAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, string search, MyServersApiSimulatorService.ChassisForSaleType type)
        {
            return base.Channel.GetAllChassisForSaleByTypeAsync(authInfo, basketGuid, search, type);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ChassisForSale> GetChassisForSaleAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid chassisGuid)
        {
            return base.Channel.GetChassisForSaleAsync(authInfo, chassisGuid);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ChassisGroup[]> GetAllChassisGroupsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string search)
        {
            return base.Channel.GetAllChassisGroupsAsync(authInfo, search);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ChassisGroup[]> GetAllReservedChassisGroupsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string search)
        {
            return base.Channel.GetAllReservedChassisGroupsAsync(authInfo, search);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ChassisGroup[]> GetAllReservedChassisGroupsForClientAsync(MyServersApiSimulatorService.AuthInfo authInfo, int clientId, string search)
        {
            return base.Channel.GetAllReservedChassisGroupsForClientAsync(authInfo, clientId, search);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ChassisGroup> GetChassisGroupAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid guid)
        {
            return base.Channel.GetChassisGroupAsync(authInfo, guid);
        }
        
        public System.Threading.Tasks.Task<System.Guid> GetNextChassisFromGroupAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid chassisGroupGuid)
        {
            return base.Channel.GetNextChassisFromGroupAsync(authInfo, chassisGroupGuid);
        }
        
        public System.Threading.Tasks.Task RefreshBMCacheAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.RefreshBMCacheAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> GetBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid)
        {
            return base.Channel.GetBasketAsync(authInfo, basketGuid);
        }
        
        public System.Threading.Tasks.Task<bool> IsBasketLockedAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid)
        {
            return base.Channel.IsBasketLockedAsync(authInfo, basketGuid);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket[]> GetBasketsByEmailAsync(MyServersApiSimulatorService.AuthInfo authInfo, string email)
        {
            return base.Channel.GetBasketsByEmailAsync(authInfo, email);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.BasketItem> GetBasketItemAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, System.Guid itemGuid)
        {
            return base.Channel.GetBasketItemAsync(authInfo, basketGuid, itemGuid);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Cost> CalcCostsAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid productGuid, MyServersApiSimulatorService.BasketItemOption[] options)
        {
            return base.Channel.CalcCostsAsync(authInfo, productGuid, options);
        }
        
        public System.Threading.Tasks.Task DeleteBasketByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid)
        {
            return base.Channel.DeleteBasketByIDAsync(authInfo, basketGuid);
        }
        
        public System.Threading.Tasks.Task DeleteBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket)
        {
            return base.Channel.DeleteBasketAsync(authInfo, basket);
        }
        
        public System.Threading.Tasks.Task EmptyBasketByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid)
        {
            return base.Channel.EmptyBasketByIDAsync(authInfo, basketGuid);
        }
        
        public System.Threading.Tasks.Task EmptyBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket)
        {
            return base.Channel.EmptyBasketAsync(authInfo, basket);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> CreateBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket)
        {
            return base.Channel.CreateBasketAsync(authInfo, basket);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> CreateBasketByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, string email, string remoteIP, string userAgent, string referer)
        {
            return base.Channel.CreateBasketByIDAsync(authInfo, email, remoteIP, userAgent, referer);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> AddItemToBasketByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, string descn, System.Guid productGuid, int quantity, string ipToInstallOn, string notes, MyServersApiSimulatorService.BasketItemOption[] options)
        {
            return base.Channel.AddItemToBasketByIDAsync(authInfo, basketGuid, descn, productGuid, quantity, ipToInstallOn, notes, options);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> AddItemToBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket, MyServersApiSimulatorService.BasketItem item, int quantity)
        {
            return base.Channel.AddItemToBasketAsync(authInfo, basket, item, quantity);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> UpdateBasketItemByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, System.Guid itemGuid, int quantity, string ipToInstallOn, string notes, MyServersApiSimulatorService.BasketItemOption[] options)
        {
            return base.Channel.UpdateBasketItemByIDAsync(authInfo, basketGuid, itemGuid, quantity, ipToInstallOn, notes, options);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> UpdateBasketItemAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket, MyServersApiSimulatorService.BasketItem item)
        {
            return base.Channel.UpdateBasketItemAsync(authInfo, basket, item);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> RemoveItemFromBasketByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, System.Guid itemGuid)
        {
            return base.Channel.RemoveItemFromBasketByIDAsync(authInfo, basketGuid, itemGuid);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> RemoveItemFromBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket, MyServersApiSimulatorService.BasketItem item)
        {
            return base.Channel.RemoveItemFromBasketAsync(authInfo, basket, item);
        }
        
        public System.Threading.Tasks.Task<string[]> ValidateBasketByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid)
        {
            return base.Channel.ValidateBasketByIDAsync(authInfo, basketGuid);
        }
        
        public System.Threading.Tasks.Task<string[]> ValidateBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket)
        {
            return base.Channel.ValidateBasketAsync(authInfo, basket);
        }
        
        public System.Threading.Tasks.Task<string[]> ValidateBasketItemByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, System.Guid itemGuid, System.Guid productGuid, MyServersApiSimulatorService.BasketItemOption[] options)
        {
            return base.Channel.ValidateBasketItemByIDAsync(authInfo, basketGuid, itemGuid, productGuid, options);
        }
        
        public System.Threading.Tasks.Task<string[]> ValidateBasketItemAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket, MyServersApiSimulatorService.BasketItem basketItem)
        {
            return base.Channel.ValidateBasketItemAsync(authInfo, basket, basketItem);
        }
        
        public System.Threading.Tasks.Task ChangeBillingPeriodAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, MyServersApiSimulatorService.BillingPeriod billingPeriod)
        {
            return base.Channel.ChangeBillingPeriodAsync(authInfo, basketGuid, billingPeriod);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Order> OrderBasketByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, MyServersApiSimulatorService.BillingPeriod billingPeriod, string privateRef)
        {
            return base.Channel.OrderBasketByIDAsync(authInfo, basketGuid, billingPeriod, privateRef);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Order> OrderBasketAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket, string privateRef)
        {
            return base.Channel.OrderBasketAsync(authInfo, basket, privateRef);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> ChangeQuantityByIDAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid basketGuid, System.Guid itemGuid, int quantity)
        {
            return base.Channel.ChangeQuantityByIDAsync(authInfo, basketGuid, itemGuid, quantity);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Basket> ChangeQuantityAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.Basket basket, MyServersApiSimulatorService.BasketItem item, int quantity)
        {
            return base.Channel.ChangeQuantityAsync(authInfo, basket, item, quantity);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Order> GetOrderAsync(MyServersApiSimulatorService.AuthInfo authInfo, string orderRef)
        {
            return base.Channel.GetOrderAsync(authInfo, orderRef);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Order[]> GetOrderByPrivateRefAsync(MyServersApiSimulatorService.AuthInfo authInfo, string privateRef)
        {
            return base.Channel.GetOrderByPrivateRefAsync(authInfo, privateRef);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Order[]> GetAllPendingOrdersAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetAllPendingOrdersAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Order[]> GetAllCompletedOrdersAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetAllCompletedOrdersAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Order[]> GetAllCancelledOrdersAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetAllCancelledOrdersAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.FAQ> GetFAQAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetFAQAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.FAQSection[]> GetAllSectionsAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetAllSectionsAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.FAQQuestion[]> GetAllQuestionsAsync(MyServersApiSimulatorService.AuthInfo authInfo, int sectionID)
        {
            return base.Channel.GetAllQuestionsAsync(authInfo, sectionID);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.FAQSection> GetSectionAsync(MyServersApiSimulatorService.AuthInfo authInfo, int sectionID)
        {
            return base.Channel.GetSectionAsync(authInfo, sectionID);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.FAQQuestion> GetQuestionAsync(MyServersApiSimulatorService.AuthInfo authInfo, int questionID)
        {
            return base.Channel.GetQuestionAsync(authInfo, questionID);
        }
        
        public System.Threading.Tasks.Task AddNullRouteAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ipAddress, string reason)
        {
            return base.Channel.AddNullRouteAsync(authInfo, ipAddress, reason);
        }
        
        public System.Threading.Tasks.Task ClearNullRouteAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ipAddress)
        {
            return base.Channel.ClearNullRouteAsync(authInfo, ipAddress);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.NullRoute[]> GetActiveNullRoutesAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetActiveNullRoutesAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task WriteIPSafeListAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ipAddress, string notes)
        {
            return base.Channel.WriteIPSafeListAsync(authInfo, ipAddress, notes);
        }
        
        public System.Threading.Tasks.Task DeleteIPSafeListAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ipAddress)
        {
            return base.Channel.DeleteIPSafeListAsync(authInfo, ipAddress);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.IPSafeListEntry[]> GetIPSafeListAsync(MyServersApiSimulatorService.AuthInfo authInfo, string search)
        {
            return base.Channel.GetIPSafeListAsync(authInfo, search);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.Licence[]> GetLicencesAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId)
        {
            return base.Channel.GetLicencesAsync(authInfo, serviceId);
        }
        
        public System.Threading.Tasks.Task AddLicenceAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, MyServersApiSimulatorService.LicenceType type, string licenceIP)
        {
            return base.Channel.AddLicenceAsync(authInfo, serviceId, type, licenceIP);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.AvailableLicenceType[]> GetLicenceTypesAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetLicenceTypesAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task RemoveLicenceByIPAddressAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, MyServersApiSimulatorService.LicenceType type, string licenceIPAddress)
        {
            return base.Channel.RemoveLicenceByIPAddressAsync(authInfo, serviceId, type, licenceIPAddress);
        }
        
        public System.Threading.Tasks.Task RemoveLicenceByProviderReferenceAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, string providerReference)
        {
            return base.Channel.RemoveLicenceByProviderReferenceAsync(authInfo, serviceId, providerReference);
        }
        
        public System.Threading.Tasks.Task<bool> AreCredentialsValidAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.AreCredentialsValidAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ClientInfo> GetClientInfoAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.AuthInfo authClient)
        {
            return base.Channel.GetClientInfoAsync(authInfo, authClient);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAvailableIPsAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.Guid clientGuid)
        {
            return base.Channel.GetAvailableIPsAsync(authInfo, clientGuid);
        }
        
        public System.Threading.Tasks.Task<int> GetServerCountAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetServerCountAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllServerIDsAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetAllServerIDsAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<string> GetServerByIPAddressAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ip)
        {
            return base.Channel.GetServerByIPAddressAsync(authInfo, ip);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ServerInfo> GetServerDetailsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId)
        {
            return base.Channel.GetServerDetailsAsync(authInfo, serviceId);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ServerInfo[]> GetAllServerDetailsAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetAllServerDetailsAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ServerInfo[]> SearchServersAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.ServerStatusSearch[] status, MyServersApiSimulatorService.ServerServiceTypeSearch[] serviceType, MyServersApiSimulatorService.ServerDeviceTypeSearch[] deviceType, string filter, bool showIPs, bool showComponents, bool showReverseDNS)
        {
            return base.Channel.SearchServersAsync(authInfo, status, serviceType, deviceType, filter, showIPs, showComponents, showReverseDNS);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ServerInfo[]> GetAllCurrentServersAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetAllCurrentServersAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.NICInfo[]> GetServerNICsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId)
        {
            return base.Channel.GetServerNICsAsync(authInfo, serviceId);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.IPInfo> LookupIPAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ip)
        {
            return base.Channel.LookupIPAsync(authInfo, ip);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.IPInfo> LookupPrivateIPAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ip, System.Nullable<int> subnetID)
        {
            return base.Channel.LookupPrivateIPAsync(authInfo, ip, subnetID);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.RequestStatus> PowerCycleServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId)
        {
            return base.Channel.PowerCycleServerAsync(authInfo, serviceId);
        }
        
        public System.Threading.Tasks.Task<int> GetRemainingKvmCountAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId)
        {
            return base.Channel.GetRemainingKvmCountAsync(authInfo, serviceId);
        }
        
        public System.Threading.Tasks.Task<int> GetRemainingRecoverySessionCountAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId)
        {
            return base.Channel.GetRemainingRecoverySessionCountAsync(authInfo, serviceId);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.RequestStatus> RequestKvmAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId)
        {
            return base.Channel.RequestKvmAsync(authInfo, serviceId);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.RequestStatus> RequestRecoverySessionAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId)
        {
            return base.Channel.RequestRecoverySessionAsync(authInfo, serviceId);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.RequestStatus> GetRequestStatusUpdateAsync(MyServersApiSimulatorService.AuthInfo authInfo, int requestid)
        {
            return base.Channel.GetRequestStatusUpdateAsync(authInfo, requestid);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.RequestStatus[]> GetAllRequestStatusUpdateAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.RequestStatusSearch search)
        {
            return base.Channel.GetAllRequestStatusUpdateAsync(authInfo, search);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.RecoverySessionDetails> GetSessionDetailsAsync(MyServersApiSimulatorService.AuthInfo authInfo, int requestid)
        {
            return base.Channel.GetSessionDetailsAsync(authInfo, requestid);
        }
        
        public System.Threading.Tasks.Task SetRecoveryModeAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, bool recoverymode)
        {
            return base.Channel.SetRecoveryModeAsync(authInfo, serviceId, recoverymode);
        }
        
        public System.Threading.Tasks.Task SetYourServerRefAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, string yourServerRef)
        {
            return base.Channel.SetYourServerRefAsync(authInfo, serviceId, yourServerRef);
        }
        
        public System.Threading.Tasks.Task CancelRequestAsync(MyServersApiSimulatorService.AuthInfo authInfo, int requestid)
        {
            return base.Channel.CancelRequestAsync(authInfo, requestid);
        }
        
        public System.Threading.Tasks.Task TerminateKVMAsync(MyServersApiSimulatorService.AuthInfo authInfo, int requestid)
        {
            return base.Channel.TerminateKVMAsync(authInfo, requestid);
        }
        
        public System.Threading.Tasks.Task CancelServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, System.DateTime cancellationDate, MyServersApiSimulatorService.CancellationReason reason, string details, string comments)
        {
            return base.Channel.CancelServerAsync(authInfo, serviceId, cancellationDate, reason, details, comments);
        }
        
        public System.Threading.Tasks.Task UncancelServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId)
        {
            return base.Channel.UncancelServerAsync(authInfo, serviceId);
        }
        
        public System.Threading.Tasks.Task SuspendServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, string reason)
        {
            return base.Channel.SuspendServerAsync(authInfo, serviceId, reason);
        }
        
        public System.Threading.Tasks.Task UnsuspendServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId)
        {
            return base.Channel.UnsuspendServerAsync(authInfo, serviceId);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.ReverseDnsEntry[]> GetReverseDnsEntriesAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetReverseDnsEntriesAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<string> GetReverseDnsEntryAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ip)
        {
            return base.Channel.GetReverseDnsEntryAsync(authInfo, ip);
        }
        
        public System.Threading.Tasks.Task SetReverseDnsEntryAsync(MyServersApiSimulatorService.AuthInfo authInfo, string ip, string hostname)
        {
            return base.Channel.SetReverseDnsEntryAsync(authInfo, ip, hostname);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.MonthlyBandwidthReportEntry[]> GetMonthlyBandwidthReportAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, bool external)
        {
            return base.Channel.GetMonthlyBandwidthReportAsync(authInfo, serviceId, external);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.BandwidthReport> GetServerBandwidthReportAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, bool external)
        {
            return base.Channel.GetServerBandwidthReportAsync(authInfo, serviceId, external);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.AlertInfo[]> GetAlertsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId)
        {
            return base.Channel.GetAlertsAsync(authInfo, serviceId);
        }
        
        public System.Threading.Tasks.Task<int> AddAlertAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, string alertType, string dest, System.Nullable<int> initDelay, System.Nullable<int> repeatDelay, System.Nullable<bool> alertOnWarn, System.Nullable<bool> alertOnFail)
        {
            return base.Channel.AddAlertAsync(authInfo, serviceId, alertType, dest, initDelay, repeatDelay, alertOnWarn, alertOnFail);
        }
        
        public System.Threading.Tasks.Task RemoveAlertAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, int alertId)
        {
            return base.Channel.RemoveAlertAsync(authInfo, serviceId, alertId);
        }
        
        public System.Threading.Tasks.Task<int[]> GetAllTestIDsAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetAllTestIDsAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.CurrentMonitorStatus[]> GetServerStatusAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId)
        {
            return base.Channel.GetServerStatusAsync(authInfo, serviceId);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.CurrentMonitorStatus[]> GetMultipleServerStatusAsync(MyServersApiSimulatorService.AuthInfo authInfo, string[] serviceIds)
        {
            return base.Channel.GetMultipleServerStatusAsync(authInfo, serviceIds);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.CurrentMonitorStatus[]> GetAllServerIssuesAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetAllServerIssuesAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.CurrentMonitorStatus[]> GetAllServerIssues2Async(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetAllServerIssues2Async(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.TestResult[]> GetTestHistoryAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, int testId, int rows)
        {
            return base.Channel.GetTestHistoryAsync(authInfo, serviceId, testId, rows);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.TestResult[]> GetMultipleTestResultsAsync(MyServersApiSimulatorService.AuthInfo authInfo, int[] testIds)
        {
            return base.Channel.GetMultipleTestResultsAsync(authInfo, testIds);
        }
        
        public System.Threading.Tasks.Task<string[]> GetTestTypesAsync()
        {
            return base.Channel.GetTestTypesAsync();
        }
        
        public System.Threading.Tasks.Task<int> AddTestAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, string testType, string ip, string arg1)
        {
            return base.Channel.AddTestAsync(authInfo, serviceId, testType, ip, arg1);
        }
        
        public System.Threading.Tasks.Task RemoveTestAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, int testId)
        {
            return base.Channel.RemoveTestAsync(authInfo, serviceId, testId);
        }
        
        public System.Threading.Tasks.Task<int> RequestIPsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, int number, string reason)
        {
            return base.Channel.RequestIPsAsync(authInfo, serviceId, number, reason);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.IPRequestStatus> GetIPRequestStatusAsync(MyServersApiSimulatorService.AuthInfo authInfo, string serviceId, int requestId)
        {
            return base.Channel.GetIPRequestStatusAsync(authInfo, serviceId, requestId);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.SubnetInfo[]> GetSubnetsAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.SubnetType type, string search)
        {
            return base.Channel.GetSubnetsAsync(authInfo, type, search);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.SubnetInfo> GetSubnetAsync(MyServersApiSimulatorService.AuthInfo authInfo, int subnetid)
        {
            return base.Channel.GetSubnetAsync(authInfo, subnetid);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.SubnetInfo> CreateQuickSubnetAsync(MyServersApiSimulatorService.AuthInfo authInfo, string cidrstring)
        {
            return base.Channel.CreateQuickSubnetAsync(authInfo, cidrstring);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.SubnetInfo> CreateSubnetAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.SubnetInfo si)
        {
            return base.Channel.CreateSubnetAsync(authInfo, si);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.SubnetInfo> ChangeSubnetAsync(MyServersApiSimulatorService.AuthInfo authInfo, MyServersApiSimulatorService.SubnetInfo subnet)
        {
            return base.Channel.ChangeSubnetAsync(authInfo, subnet);
        }
        
        public System.Threading.Tasks.Task DeleteSubnetAsync(MyServersApiSimulatorService.AuthInfo authInfo, int subnetid)
        {
            return base.Channel.DeleteSubnetAsync(authInfo, subnetid);
        }
        
        public System.Threading.Tasks.Task<string[]> GetIPAddressesForSubnetAsync(MyServersApiSimulatorService.AuthInfo authInfo, int subnetID)
        {
            return base.Channel.GetIPAddressesForSubnetAsync(authInfo, subnetID);
        }
        
        public System.Threading.Tasks.Task AssignIPToServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, int subnetid, string ipaddr, int nicid)
        {
            return base.Channel.AssignIPToServerAsync(authInfo, subnetid, ipaddr, nicid);
        }
        
        public System.Threading.Tasks.Task RemoveIPFromServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, int subnetid, string ipaddr)
        {
            return base.Channel.RemoveIPFromServerAsync(authInfo, subnetid, ipaddr);
        }
        
        public System.Threading.Tasks.Task<int> GetDomainCountAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetDomainCountAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.HostedDomainInfo[]> GetForwardDnsDomainsAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetForwardDnsDomainsAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.HostedDomainInfo> GetForwardDnsDomainAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId)
        {
            return base.Channel.GetForwardDnsDomainAsync(authInfo, domainId);
        }
        
        public System.Threading.Tasks.Task<int> AddForwardDnsDomainAsync(MyServersApiSimulatorService.AuthInfo authInfo, string domainName, string hostingType, string primaryNS)
        {
            return base.Channel.AddForwardDnsDomainAsync(authInfo, domainName, hostingType, primaryNS);
        }
        
        public System.Threading.Tasks.Task DeleteForwardDnsDomainAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId)
        {
            return base.Channel.DeleteForwardDnsDomainAsync(authInfo, domainId);
        }
        
        public System.Threading.Tasks.Task UpdateDomainHostingSettingsAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string hostingType, string primaryNS, string allowedTransferList, System.Nullable<int> defaultTTL)
        {
            return base.Channel.UpdateDomainHostingSettingsAsync(authInfo, domainId, hostingType, primaryNS, allowedTransferList, defaultTTL);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.HostedDomainRecord[]> GetForwardDnsEntriesAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId)
        {
            return base.Channel.GetForwardDnsEntriesAsync(authInfo, domainId);
        }
        
        public System.Threading.Tasks.Task DeleteForwardDnsEntryAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, int recordId)
        {
            return base.Channel.DeleteForwardDnsEntryAsync(authInfo, domainId, recordId);
        }
        
        public System.Threading.Tasks.Task AddDnsARecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string recordName, string ip, System.Nullable<int> ttl)
        {
            return base.Channel.AddDnsARecordAsync(authInfo, domainId, recordName, ip, ttl);
        }
        
        public System.Threading.Tasks.Task AddDnsAAAARecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string recordName, string ip, System.Nullable<int> ttl)
        {
            return base.Channel.AddDnsAAAARecordAsync(authInfo, domainId, recordName, ip, ttl);
        }
        
        public System.Threading.Tasks.Task AddDnsCNAMERecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string recordName, string destination, System.Nullable<int> ttl)
        {
            return base.Channel.AddDnsCNAMERecordAsync(authInfo, domainId, recordName, destination, ttl);
        }
        
        public System.Threading.Tasks.Task AddDnsMXRecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string mailServer, int priority, string subDomain, System.Nullable<int> ttl)
        {
            return base.Channel.AddDnsMXRecordAsync(authInfo, domainId, mailServer, priority, subDomain, ttl);
        }
        
        public System.Threading.Tasks.Task AddDnsNSRecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string hostName, string subDomain, System.Nullable<int> ttl)
        {
            return base.Channel.AddDnsNSRecordAsync(authInfo, domainId, hostName, subDomain, ttl);
        }
        
        public System.Threading.Tasks.Task AddDnsSRVRecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string serviceName, int priority, int weight, int port, string hostName, System.Nullable<int> ttl)
        {
            return base.Channel.AddDnsSRVRecordAsync(authInfo, domainId, serviceName, priority, weight, port, hostName, ttl);
        }
        
        public System.Threading.Tasks.Task AddDnsTXTRecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string recordName, string data, System.Nullable<int> ttl)
        {
            return base.Channel.AddDnsTXTRecordAsync(authInfo, domainId, recordName, data, ttl);
        }
        
        public System.Threading.Tasks.Task AddDnsSPFRecordAsync(MyServersApiSimulatorService.AuthInfo authInfo, int domainId, string subDomain, string spfData, System.Nullable<int> ttl)
        {
            return base.Channel.AddDnsSPFRecordAsync(authInfo, domainId, subDomain, spfData, ttl);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.DomainContact[]> GetDomainContactsAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetDomainContactsAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<bool> CheckDomainAvailabilityAsync(MyServersApiSimulatorService.AuthInfo authInfo, string domainName)
        {
            return base.Channel.CheckDomainAvailabilityAsync(authInfo, domainName);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.DomainAvailability[]> CheckMultipleDomainsAvailabilityAsync(MyServersApiSimulatorService.AuthInfo authInfo, string[] domainNames)
        {
            return base.Channel.CheckMultipleDomainsAvailabilityAsync(authInfo, domainNames);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.TopLevelDomain[]> GetAllTLDsAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetAllTLDsAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<string> RegisterDomainAsync(MyServersApiSimulatorService.AuthInfo authInfo, string domainName, int years, int techContactId, int adminContactId, int ownerContactId)
        {
            return base.Channel.RegisterDomainAsync(authInfo, domainName, years, techContactId, adminContactId, ownerContactId);
        }
        
        public System.Threading.Tasks.Task<string> RegisterDomainsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string[] domainNames, int years, int techContactId, int adminContactId, int ownerContactId)
        {
            return base.Channel.RegisterDomainsAsync(authInfo, domainNames, years, techContactId, adminContactId, ownerContactId);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.InvoiceHeader[]> GetInvoiceHeadersAsync(MyServersApiSimulatorService.AuthInfo authInfo, System.DateTime from, System.DateTime to)
        {
            return base.Channel.GetInvoiceHeadersAsync(authInfo, from, to);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.InvoiceItem[]> GetInvoiceItemsAsync(MyServersApiSimulatorService.AuthInfo authInfo, string invoiceNo)
        {
            return base.Channel.GetInvoiceItemsAsync(authInfo, invoiceNo);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.InvoiceItem[]> GetInvoiceItemsByServerAsync(MyServersApiSimulatorService.AuthInfo authInfo, string invoiceNo, string serviceID)
        {
            return base.Channel.GetInvoiceItemsByServerAsync(authInfo, invoiceNo, serviceID);
        }
        
        public System.Threading.Tasks.Task<MyServersApiSimulatorService.AccountSummary> GetAccountSummaryAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetAccountSummaryAsync(authInfo);
        }
        
        public System.Threading.Tasks.Task<int> GetUnreadMessageCountAsync(MyServersApiSimulatorService.AuthInfo authInfo)
        {
            return base.Channel.GetUnreadMessageCountAsync(authInfo);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMyServersApi))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMyServersApi))
            {
                return new System.ServiceModel.EndpointAddress("https://api.rapidswitch.com/MyServersApi/Simulator.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return MyServersApiClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IMyServersApi);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return MyServersApiClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IMyServersApi);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IMyServersApi,
        }
    }
}
